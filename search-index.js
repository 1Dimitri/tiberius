var searchIndex={};
searchIndex["tiberius"] = {"doc":"A pure-rust TDS implementation for Microsoft SQL Server…","i":[[3,"Uuid","tiberius","A Universally Unique Identifier (UUID).",null,null],[3,"Client","","`Client` is the main entry point to the SQL Server,…",null,null],[3,"ClientBuilder","","A builder for creating a new [`Client`].",null,null],[3,"QueryResult","","A set of `Streams` of [`Rows`] resulting from a `SELECT`…",null,null],[3,"ExecuteResult","","A `Stream` of counts of affected rows resulting from an…",null,null],[3,"Column","","A column of data from a query.",null,null],[3,"Row","","A row of data from a query.",null,null],[4,"AuthMethod","","Defines the method of authentication to the server.",null,null],[13,"SqlServer","","Authenticate directly with SQL Server. The only…",0,null],[13,"Windows","","Authenticate with Windows credentials. Only available on…",0,null],[13,"WindowsIntegrated","","Authenticate as the currently logged in user. Only…",0,null],[4,"ColumnType","","The type of the column.",null,null],[13,"Null","","The column doesn't have a specified type.",1,null],[13,"Bit","","A bit or boolean value.",1,null],[13,"Int1","","An 8-bit integer value.",1,null],[13,"Int2","","A 16-bit integer value.",1,null],[13,"Int4","","A 32-bit integer value.",1,null],[13,"Int8","","A 64-bit integer value.",1,null],[13,"Datetime4","","A 32-bit datetime value.",1,null],[13,"Float4","","A 32-bit floating point value.",1,null],[13,"Float8","","A 64-bit floating point value.",1,null],[13,"Money","","Money value.",1,null],[13,"Datetime","","A TDS 7.2 datetime value.",1,null],[13,"Money4","","A 32-bit money value.",1,null],[13,"Guid","","A unique identifier, UUID.",1,null],[13,"Intn","","N-bit integer value (variable).",1,null],[13,"Bitn","","A bit value in a variable-length type.",1,null],[13,"Decimaln","","A decimal value (same as `Numericn`).",1,null],[13,"Numericn","","A numeric value (same as `Decimaln`).",1,null],[13,"Floatn","","A n-bit floating point value.",1,null],[13,"Datetimen","","A n-bit datetime value (TDS 7.2).",1,null],[13,"Daten","","A n-bit date value (TDS 7.3).",1,null],[13,"Timen","","A n-bit time value (TDS 7.3).",1,null],[13,"Datetime2","","A n-bit datetime2 value (TDS 7.3).",1,null],[13,"DatetimeOffsetn","","A n-bit datetime value with an offset (TDS 7.3).",1,null],[13,"BigVarBin","","A variable binary value.",1,null],[13,"BigVarChar","","A large variable string value.",1,null],[13,"BigBinary","","A binary value.",1,null],[13,"BigChar","","A string value.",1,null],[13,"NVarchar","","A variable string value with UTF-16 encoding.",1,null],[13,"NChar","","A string value with UTF-16 encoding.",1,null],[13,"Xml","","A XML value.",1,null],[13,"Udt","","User-defined type.",1,null],[13,"Text","","A text value (deprecated).",1,null],[13,"Image","","A image value (deprecated).",1,null],[13,"NText","","A text value with UTF-16 encoding (deprecated).",1,null],[13,"SSVariant","","An SQL variant type.",1,null],[4,"ColumnData","","A container of a value that can be represented as a TDS…",null,null],[13,"I8","","8-bit integer, signed.",2,null],[13,"I16","","16-bit integer, signed.",2,null],[13,"I32","","32-bit integer, signed.",2,null],[13,"I64","","64-bit integer, signed.",2,null],[13,"F32","","32-bit floating point number.",2,null],[13,"F64","","64-bit floating point number.",2,null],[13,"Bit","","Boolean.",2,null],[13,"String","","A string value.",2,null],[13,"Guid","","A Guid (UUID) value.",2,null],[13,"Binary","","Binary data.",2,null],[13,"Numeric","","Numeric value (a decimal).",2,null],[13,"Xml","","XML data.",2,null],[13,"DateTime","","DateTime value.",2,null],[13,"SmallDateTime","","A small DateTime value.",2,null],[13,"Time","","Time value.",2,null],[13,"Date","","Date value.",2,null],[13,"DateTime2","","DateTime2 value.",2,null],[13,"DateTimeOffset","","DateTime2 value with an offset.",2,null],[4,"EncryptionLevel","","The configured encryption level specifying if encryption…",null,null],[13,"Off","","Only use encryption for the login procedure",3,null],[13,"On","","Encrypt everything if possible",3,null],[13,"NotSupported","","Do not encrypt anything",3,null],[13,"Required","","Encrypt everything and fail if not possible",3,null],[11,"host","","A host or ip address to connect to.",4,[[["self"]]]],[11,"port","","The server port.",4,[[["u16"],["self"]]]],[11,"database","","The database to connect to.",4,[[["self"]]]],[11,"instance_name","","The instance name as defined in the SQL Browser. Only…",4,[[["self"]]]],[11,"encryption","","Set the preferred encryption level.",4,[[["self"],["encryptionlevel"]]]],[11,"trust_cert","","If set, the server certificate will not be validated and…",4,[[["self"]]]],[11,"authentication","","Sets the authentication method.",4,[[["authmethod"],["self"]]]],[11,"build","","Creates a new client and connects to the server.",4,[[]]],[11,"from_ado_string","","Creates a new `ClientBuilder` from an ADO.NET connection…",4,[[["str"]],["result"]]],[11,"sql_server","","Construct a new SQL Server authentication configuration.",0,[[],["self"]]],[11,"windows","","Construct a new Windows authentication configuration. Only…",0,[[],["self"]]],[11,"builder","","Starts an instance of [`ClientBuilder`] for specifying the…",5,[[],["clientbuilder"]]],[11,"execute","","Executes SQL statements in the SQL Server, returning the…",5,[[["self"]]]],[11,"query","","Executes SQL statements in the SQL Server, returning…",5,[[["self"]]]],[11,"simple_query","","Execute multiple queries, delimited with `;` and return…",5,[[["self"]]]],[0,"error","","Error module",null,null],[4,"IoErrorKind","tiberius::error","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",6,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",6,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",6,null],[13,"ConnectionReset","","The connection was reset by the remote server.",6,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",6,null],[13,"NotConnected","","The network operation failed because it was not connected…",6,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",6,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",6,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",6,null],[13,"AlreadyExists","","An entity already exists, often a file.",6,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",6,null],[13,"InvalidInput","","A parameter was incorrect.",6,null],[13,"InvalidData","","Data not valid for the operation were encountered.",6,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",6,null],[13,"WriteZero","","An error returned when an operation could not be completed…",6,null],[13,"Interrupted","","This operation was interrupted.",6,null],[13,"Other","","Any I/O error not part of this list.",6,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",6,null],[3,"TokenError","","An error token returned from the server.",null,null],[4,"Error","","A unified error enum that contains several errors that…",null,null],[13,"Io","","An error occured when performing I/O to the server.",7,null],[12,"kind","tiberius::error::Error","A list specifying general categories of I/O error.",8,null],[12,"message","","The error description.",8,null],[13,"Protocol","tiberius::error","An error happened during the request or response parsing.",7,null],[13,"Encoding","","Server responded with encoding not supported.",7,null],[13,"Conversion","","Conversion failure from one type to another.",7,null],[13,"Utf8","","Tried to convert data to UTF-8 that was not valid.",7,null],[13,"Utf16","","Tried to convert data to UTF-16 that was not valid.",7,null],[13,"ParseInt","","Tried to parse an integer that was not an integer.",7,null],[13,"Server","","An error returned by the server.",7,null],[13,"Tls","","An error in the TLS handshake.",7,null],[11,"columns","tiberius","Names of the columns of the current resultset. Order is…",9,[[["self"]],["option"]]],[11,"next_resultset","","Returns `true` if stream has more result sets available.…",9,[[["self"]],["bool"]]],[11,"into_results","","Collects results from all queries in the stream into…",9,[[]]],[11,"into_first_result","","Collects the output of the first query, dropping any…",9,[[]]],[11,"into_row","","Collects the first row from the output of the first query,…",9,[[]]],[11,"total","","Aggregates all resulting row counts into a sum.",10,[[],["u64"]]],[11,"name","","The name of the column.",11,[[["self"]],["str"]]],[11,"column_type","","The type of the column.",11,[[["self"]],["columntype"]]],[11,"columns","","Columns defining the row data. Columns listed here are in…",12,[[["self"]]]],[11,"len","","Returns the number of columns in the row.",12,[[["self"]],["usize"]]],[11,"get","","Retrieve a column value for a given column index, which…",12,[[["i"],["self"]],["option"]]],[11,"try_get","","Retrieve a column's value for a given column index.",12,[[["i"],["self"]],[["result",["option"]],["option"]]]],[11,"code","tiberius::error","The error code, see descriptions from [the manual].",13,[[["self"]],["u32"]]],[11,"state","","The error state, used as a modifier to the error number.",13,[[["self"]],["u8"]]],[11,"class","","The class (severity) of the error. A class of less than 10…",13,[[["self"]],["u8"]]],[11,"message","","The error message returned from the server.",13,[[["self"]],["str"]]],[11,"server","","The server name.",13,[[["self"]],["str"]]],[11,"procedure","","The name of the stored procedure causing the error.",13,[[["self"]],["str"]]],[11,"line","","The line number in the SQL batch or stored procedure that…",13,[[["self"]],["u32"]]],[0,"numeric","tiberius","Representations of numeric types.",null,null],[3,"Numeric","tiberius::numeric","Represent a sql Decimal / Numeric type. It is stored in a…",null,null],[0,"time","tiberius","Date and time handling.",null,null],[3,"DateTime","tiberius::time","A presentation of `datetime` type in the server.",null,null],[3,"SmallDateTime","","A presentation of `smalldatetime` type in the server.",null,null],[3,"Date","","A presentation of `date` type in the server.",null,null],[3,"Time","","A presentation of `time` type in the server.",null,null],[3,"DateTime2","","A presentation of `datetime2` type in the server.",null,null],[3,"DateTimeOffset","","A presentation of `datetimeoffset` type in the server.",null,null],[0,"xml","tiberius","The XML containers",null,null],[3,"XmlSchema","tiberius::xml","Provides information of the location for the schema.",null,null],[3,"XmlData","","A representation of XML data in TDS. Holds the data as a…",null,null],[6,"Result","tiberius","An alias for a result that holds crate's error type as the…",null,null],[8,"FromSql","","A conversion trait from a TDS type by-reference.",null,null],[10,"from_sql","","Returns the value, `None` being a null value, copying the…",14,[[["columndata"]],[["result",["option"]],["option"]]]],[8,"FromSqlOwned","","A conversion trait from a TDS type by-value.",null,null],[10,"from_sql_owned","","Returns the value, `None` being a null value, taking the…",15,[[["columndata"]],[["result",["option"]],["option"]]]],[8,"IntoSql","","A by-value conversion trait to a TDS type.",null,null],[10,"into_sql","","Convert to a value understood by the SQL Server.…",16,[[],["columndata"]]],[8,"ToSql","","A conversion trait to a TDS type.",null,null],[10,"to_sql","","Convert to a value understood by the SQL Server.…",17,[[["self"]],["columndata"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"into","","",18,[[],["u"]]],[11,"to_owned","","",18,[[["self"]],["t"]]],[11,"clone_into","","",18,[[["self"],["t"]]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"try_into","","",18,[[],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"type_id","","",18,[[["self"]],["typeid"]]],[11,"vzip","","",18,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"vzip","","",5,[[],["v"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"vzip","","",4,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"try_poll_next","","",9,[[["context"],["pin"],["s"]],[["poll",["option"]],["option",["result"]]]]],[11,"vzip","","",9,[[],["v"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"into_iter","","",10,[[],["i"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"vzip","","",10,[[],["v"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"into_iter","","",12,[[],["i"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"vzip","","",12,[[],["v"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"vzip","","",0,[[],["v"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"vzip","","",1,[[],["v"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"vzip","","",2,[[],["v"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"vzip","","",3,[[],["v"]]],[11,"from","tiberius::error","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"vzip","","",6,[[],["v"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,[[["self"],["t"]]]],[11,"to_string","","",13,[[["self"]],["string"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"vzip","","",13,[[],["v"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"to_string","","",7,[[["self"]],["string"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","tiberius::numeric","",19,[[["t"]],["t"]]],[11,"into","","",19,[[],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,[[["self"],["t"]]]],[11,"to_string","","",19,[[["self"]],["string"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"try_into","","",19,[[],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"type_id","","",19,[[["self"]],["typeid"]]],[11,"vzip","","",19,[[],["v"]]],[11,"from","tiberius::time","",20,[[["t"]],["t"]]],[11,"into","","",20,[[],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,[[["self"],["t"]]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"try_into","","",20,[[],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"type_id","","",20,[[["self"]],["typeid"]]],[11,"vzip","","",20,[[],["v"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into","","",21,[[],["u"]]],[11,"to_owned","","",21,[[["self"]],["t"]]],[11,"clone_into","","",21,[[["self"],["t"]]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"try_into","","",21,[[],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"type_id","","",21,[[["self"]],["typeid"]]],[11,"vzip","","",21,[[],["v"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into","","",22,[[],["u"]]],[11,"to_owned","","",22,[[["self"]],["t"]]],[11,"clone_into","","",22,[[["self"],["t"]]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"try_into","","",22,[[],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"type_id","","",22,[[["self"]],["typeid"]]],[11,"vzip","","",22,[[],["v"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into","","",23,[[],["u"]]],[11,"to_owned","","",23,[[["self"]],["t"]]],[11,"clone_into","","",23,[[["self"],["t"]]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"try_into","","",23,[[],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"type_id","","",23,[[["self"]],["typeid"]]],[11,"vzip","","",23,[[],["v"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"into","","",24,[[],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,[[["self"],["t"]]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"try_into","","",24,[[],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"type_id","","",24,[[["self"]],["typeid"]]],[11,"vzip","","",24,[[],["v"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"into","","",25,[[],["u"]]],[11,"to_owned","","",25,[[["self"]],["t"]]],[11,"clone_into","","",25,[[["self"],["t"]]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"try_into","","",25,[[],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"type_id","","",25,[[["self"]],["typeid"]]],[11,"vzip","","",25,[[],["v"]]],[11,"from","tiberius::xml","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_owned","","",26,[[["self"]],["t"]]],[11,"clone_into","","",26,[[["self"],["t"]]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"vzip","","",26,[[],["v"]]],[11,"from","","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"to_owned","","",27,[[["self"]],["t"]]],[11,"clone_into","","",27,[[["self"],["t"]]]],[11,"to_string","","",27,[[["self"]],["string"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"vzip","","",27,[[],["v"]]],[11,"hash","tiberius::error","",6,[[["self"],["__h"]]]],[11,"partial_cmp","","",6,[[["self"],["errorkind"]],[["ordering"],["option",["ordering"]]]]],[11,"cmp","","",6,[[["self"],["errorkind"]],["ordering"]]],[11,"eq","","",6,[[["self"],["errorkind"]],["bool"]]],[11,"fmt","","",6,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"clone","","",6,[[["self"]],["errorkind"]]],[11,"partial_cmp","tiberius","",18,[[["self"],["uuid"]],[["ordering"],["option",["ordering"]]]]],[11,"lt","","",18,[[["self"],["uuid"]],["bool"]]],[11,"le","","",18,[[["self"],["uuid"]],["bool"]]],[11,"gt","","",18,[[["self"],["uuid"]],["bool"]]],[11,"ge","","",18,[[["self"],["uuid"]],["bool"]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"default","","",18,[[],["uuid"]]],[11,"eq","","",18,[[["self"],["uuid"]],["bool"]]],[11,"ne","","",18,[[["self"],["uuid"]],["bool"]]],[11,"clone","","",18,[[["self"]],["uuid"]]],[11,"hash","","",18,[[["self"],["__h"]]]],[11,"fmt","","",18,[[["formatter"],["self"]],[["error"],["result",["error"]]]]],[11,"cmp","","",18,[[["self"],["uuid"]],["ordering"]]],[11,"from_str","","",18,[[["str"]],[["result",["uuid"]],["uuid"]]]],[11,"from_sql","","",18,[[["columndata"]],[["result",["option"]],["option"]]]],[11,"from_sql","tiberius::numeric","",19,[[["columndata"]],[["result",["option"]],["option"]]]],[11,"from_sql_owned","tiberius","",18,[[["columndata"]],[["result",["option"]],["option"]]]],[11,"from_sql_owned","tiberius::numeric","",19,[[["columndata"]],[["result",["option"]],["option"]]]],[11,"from_sql_owned","tiberius::xml","",27,[[["columndata"]],[["result",["option"]],["option"]]]],[11,"to_sql","tiberius::numeric","",19,[[["self"]],["columndata"]]],[11,"to_sql","tiberius::xml","",27,[[["self"]],["columndata"]]],[11,"to_sql","tiberius","",18,[[["self"]],["columndata"]]],[11,"into_sql","tiberius::xml","",27,[[],["columndata"]]],[11,"as_ref","","",27,[[["self"]],["str"]]],[11,"from","tiberius::error","",7,[[["error"]],["self"]]],[11,"from","","",7,[[["error"]],["self"]]],[11,"from","","",7,[[["infallible"]],["self"]]],[11,"from","","",7,[[["error"]],["error"]]],[11,"from","","",7,[[["parseinterror"]],["error"]]],[11,"from","","",7,[[["utf8error"]],["error"]]],[11,"from","","",7,[[["fromutf8error"]],["error"]]],[11,"from","","",7,[[["fromutf16error"]],["error"]]],[11,"into_iter","tiberius","",10,[[]]],[11,"into_iter","","",12,[[]]],[11,"clone","","",4,[[["self"]],["clientbuilder"]]],[11,"clone","","",0,[[["self"]],["authmethod"]]],[11,"clone","tiberius::error","",7,[[["self"]],["error"]]],[11,"clone","tiberius","",1,[[["self"]],["columntype"]]],[11,"clone","","",2,[[["self"]],["columndata"]]],[11,"clone","tiberius::error","",13,[[["self"]],["tokenerror"]]],[11,"clone","tiberius::numeric","",19,[[["self"]],["numeric"]]],[11,"clone","tiberius::time","",20,[[["self"]],["datetime"]]],[11,"clone","","",21,[[["self"]],["smalldatetime"]]],[11,"clone","","",22,[[["self"]],["date"]]],[11,"clone","","",23,[[["self"]],["time"]]],[11,"clone","","",24,[[["self"]],["datetime2"]]],[11,"clone","","",25,[[["self"]],["datetimeoffset"]]],[11,"clone","tiberius::xml","",26,[[["self"]],["xmlschema"]]],[11,"clone","","",27,[[["self"]],["xmldata"]]],[11,"clone","tiberius","",3,[[["self"]],["encryptionlevel"]]],[11,"default","","",4,[[],["self"]]],[11,"eq","","",0,[[["self"],["authmethod"]],["bool"]]],[11,"ne","","",0,[[["self"],["authmethod"]],["bool"]]],[11,"eq","tiberius::numeric","",19,[[["self"]],["bool"]]],[11,"eq","tiberius::time","",20,[[["self"],["datetime"]],["bool"]]],[11,"ne","","",20,[[["self"],["datetime"]],["bool"]]],[11,"eq","","",21,[[["smalldatetime"],["self"]],["bool"]]],[11,"ne","","",21,[[["smalldatetime"],["self"]],["bool"]]],[11,"eq","","",22,[[["self"],["date"]],["bool"]]],[11,"ne","","",22,[[["self"],["date"]],["bool"]]],[11,"eq","","",23,[[["self"],["time"]],["bool"]]],[11,"eq","","",24,[[["self"],["datetime2"]],["bool"]]],[11,"ne","","",24,[[["self"],["datetime2"]],["bool"]]],[11,"eq","","",25,[[["self"],["datetimeoffset"]],["bool"]]],[11,"ne","","",25,[[["self"],["datetimeoffset"]],["bool"]]],[11,"eq","tiberius::xml","",26,[[["xmlschema"],["self"]],["bool"]]],[11,"ne","","",26,[[["xmlschema"],["self"]],["bool"]]],[11,"eq","","",27,[[["xmldata"],["self"]],["bool"]]],[11,"ne","","",27,[[["xmldata"],["self"]],["bool"]]],[11,"eq","tiberius","",3,[[["encryptionlevel"],["self"]],["bool"]]],[11,"to_string","tiberius::xml","",27,[[["self"]],["string"]]],[11,"fmt","tiberius","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::error","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::error","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::numeric","",19,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"fmt","tiberius::time","",20,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",21,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",22,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",23,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",24,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",25,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::xml","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::error","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","tiberius::numeric","",19,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"try_from","tiberius","",3,[[["u8"]],[["encryptionlevel"],["result",["encryptionlevel"]]]]],[11,"try_from","","",3,[[["u32"]],[["encryptionlevel"],["result",["encryptionlevel"]]]]],[11,"poll_next","","",9,[[["self"],["context"],["pin"]],[["poll",["option"]],["option"]]]],[11,"nil","","The 'nil UUID'.",18,[[],["uuid"]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",18,[[["u16"],["u32"]],[["result",["uuid","error"]],["error"],["uuid"]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",18,[[["u16"],["u32"]],[["result",["uuid","error"]],["error"],["uuid"]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",18,[[["u128"]],["uuid"]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",18,[[["u128"]],["uuid"]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",18,[[],[["result",["uuid","error"]],["error"],["uuid"]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",18,[[],["uuid"]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",18,[[["str"]],[["result",["uuid","error"]],["error"],["uuid"]]]],[11,"to_hyphenated","","Get a [`Hyphenated`] formatter.",18,[[],["hyphenated"]]],[11,"to_hyphenated_ref","","Get a borrowed [`HyphenatedRef`] formatter.",18,[[["self"]],["hyphenatedref"]]],[11,"to_simple","","Get a [`Simple`] formatter.",18,[[],["simple"]]],[11,"to_simple_ref","","Get a borrowed [`SimpleRef`] formatter.",18,[[["self"]],["simpleref"]]],[11,"to_urn","","Get a [`Urn`] formatter.",18,[[],["urn"]]],[11,"to_urn_ref","","Get a borrowed [`UrnRef`] formatter.",18,[[["self"]],["urnref"]]],[11,"new_v1","","Create a new UUID (version 1) using a time value +…",18,[[["timestamp"]],[["result",["uuid","error"]],["error"],["uuid"]]]],[11,"to_timestamp","","Returns an optional [`Timestamp`] storing the timestamp…",18,[[["self"]],[["option",["timestamp"]],["timestamp"]]]],[11,"new_v3","","Creates a UUID using a name from a namespace, based on the…",18,[[["uuid"]],["uuid"]]],[11,"new_v4","","Creates a random UUID.",18,[[],["uuid"]]],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",18,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",18,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",18,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",18,null],[11,"get_variant","","Returns the variant of the UUID structure.",18,[[["self"]],[["variant"],["option",["variant"]]]]],[11,"get_version_num","","Returns the version number of the UUID.",18,[[["self"]],["usize"]]],[11,"get_version","","Returns the version of the UUID.",18,[[["self"]],[["version"],["option",["version"]]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",18,[[["self"]]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",18,[[["self"]]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",18,[[["self"]],["u128"]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",18,[[["self"]],["u128"]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",18,[[["self"]]]],[11,"is_nil","","Tests if the UUID is nil.",18,[[["self"]],["bool"]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",18,[[]]],[11,"new_with_scale","tiberius::numeric","Creates a new Numeric value.",19,[[["i128"],["u8"]],["self"]]],[11,"dec_part","","Extract the decimal part.",19,[[],["i128"]]],[11,"int_part","","Extract the integer part.",19,[[],["i128"]]],[11,"scale","","The scale (where is the decimal point) of the value.",19,[[],["u8"]]],[11,"value","","The internal integer value",19,[[],["i128"]]],[11,"precision","","The precision of the `Number` as a number of digits.",19,[[],["u8"]]],[11,"new","tiberius::time","Construct a new `DateTime` instance.",20,[[["u32"],["i32"]],["self"]]],[11,"days","","Days since 1st of January, 1900 (including the negative…",20,[[["self"]],["i32"]]],[11,"seconds_fragments","","1/300 of a second, so a value of 300 equals 1 second…",20,[[["self"]],["u32"]]],[11,"new","","Construct a new `SmallDateTime` instance.",21,[[["u16"]],["self"]]],[11,"days","","Days since 1st of January, 1900.",21,[[["self"]],["u16"]]],[11,"seconds_fragments","","1/300 of a second, so a value of 300 equals 1 second…",21,[[["self"]],["u16"]]],[11,"new","","Construct a new `Date`",22,[[["u32"]],["date"]]],[11,"days","","The number of days from 1st of January, year 1.",22,[[["self"]],["u32"]]],[11,"new","","Construct a new `Time`",23,[[["u64"],["u8"]],["self"]]],[11,"increments","","Number of 10^-n second increments since midnight, where…",23,[[["self"]],["u64"]]],[11,"scale","","The accuracy of the increments.",23,[[["self"]],["u8"]]],[11,"new","","Construct a new `DateTime2` from the date and time…",24,[[["date"],["time"]],["self"]]],[11,"date","","The date component.",24,[[["self"]],["date"]]],[11,"time","","The time component.",24,[[["self"]],["time"]]],[11,"new","","Construct a new `DateTimeOffset` from a `datetime2`,…",25,[[["datetime2"],["i16"]],["self"]]],[11,"datetime2","","The date and time part.",25,[[["self"]],["datetime2"]]],[11,"offset","","Number of minutes from UTC.",25,[[["self"]],["i16"]]],[11,"db_name","tiberius::xml","Specifies the name of the database where the schema…",26,[[["self"]],["str"]]],[11,"owner","","Specifies the name of the relational schema containing the…",26,[[["self"]],["str"]]],[11,"collection","","Specifies the name of the XML schema collection to which…",26,[[["self"]],["str"]]],[11,"new","","Create a new XmlData with the given string. Validation of…",27,[[],["self"]]],[11,"schema","","Returns information about the schema of the XML file, if…",27,[[["self"]],[["option",["xmlschema"]],["xmlschema"]]]],[11,"into_string","","Takes the XML string out from the struct.",27,[[],["string"]]]],"p":[[4,"AuthMethod"],[4,"ColumnType"],[4,"ColumnData"],[4,"EncryptionLevel"],[3,"ClientBuilder"],[3,"Client"],[4,"IoErrorKind"],[4,"Error"],[13,"Io"],[3,"QueryResult"],[3,"ExecuteResult"],[3,"Column"],[3,"Row"],[3,"TokenError"],[8,"FromSql"],[8,"FromSqlOwned"],[8,"IntoSql"],[8,"ToSql"],[3,"Uuid"],[3,"Numeric"],[3,"DateTime"],[3,"SmallDateTime"],[3,"Date"],[3,"Time"],[3,"DateTime2"],[3,"DateTimeOffset"],[3,"XmlSchema"],[3,"XmlData"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);