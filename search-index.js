var searchIndex = JSON.parse('{\
"tiberius":{"doc":"An asynchronous, runtime-independent, pure-rust Tabular â€¦","t":[0,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,12,12,13,13,13,13,13,13,13,13,13,13,12,12,11,11,11,11,11,11,11,0,3,3,4,13,13,13,3,3,0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,4,13,13,13,3,3,8,10,8,10,3,3,3,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,8,10,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,8,10,8,10,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,18,18,18,18,11,11,11,11,11,11,11,11,11,11],"n":["error","TokenError","IoErrorKind","NotFound","PermissionDenied","ConnectionRefused","ConnectionReset","ConnectionAborted","NotConnected","AddrInUse","AddrNotAvailable","BrokenPipe","AlreadyExists","WouldBlock","InvalidInput","InvalidData","TimedOut","WriteZero","Interrupted","Other","UnexpectedEof","Error","Io","kind","message","Protocol","Encoding","Conversion","Utf8","Utf16","ParseInt","Server","Tls","Gssapi","Routing","host","port","code","state","class","message","server","procedure","line","numeric","BigDecimal","BigInt","Sign","Minus","NoSign","Plus","Decimal","Numeric","time","chrono","FixedOffset","Utc","DateTime","NaiveDate","NaiveDateTime","NaiveTime","DateTime","SmallDateTime","Date","Time","DateTime2","DateTimeOffset","xml","XmlSchema","XmlData","AuthMethod","SqlServer","Windows","Integrated","Client","Config","FromSql","from_sql","FromSqlOwned","from_sql_owned","QueryResult","ExecuteResult","Column","ColumnType","Null","Bit","Int1","Int2","Int4","Int8","Datetime4","Float4","Float8","Money","Datetime","Money4","Guid","Intn","Bitn","Decimaln","Numericn","Floatn","Datetimen","Daten","Timen","Datetime2","DatetimeOffsetn","BigVarBin","BigVarChar","BigBinary","BigChar","NVarchar","NChar","Xml","Udt","Text","Image","NText","SSVariant","Row","SqlBrowser","connect_named","ColumnData","U8","I16","I32","I64","F32","F64","Bit","String","Guid","Binary","Numeric","Xml","DateTime","SmallDateTime","Time","Date","DateTime2","DateTimeOffset","EncryptionLevel","Off","On","NotSupported","Required","IntoSql","into_sql","ToSql","to_sql","Uuid","Result","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","try_poll_next","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","average_floor","average_ceil","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","round_subsecs","trunc_subsecs","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","round_subsecs","trunc_subsecs","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","round_subsecs","trunc_subsecs","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","partial_cmp","clone","cmp","hash","fmt","eq","default","zero","is_zero","mul_assign","mul_assign","from_str","sub_assign","sub_assign","sub_assign","sub_assign","clone","add","add","add","add","sub","sub","sub","sub","from_str_radix","to_bigint","add_assign","add_assign","add_assign","add_assign","sum","sum","eq","from","from","from","from","from","from","from","from","from","from","fmt","from_i64","from_u64","from_f32","from_f64","div","div","div","div","div","div","partial_cmp","try_from","try_from","one","to_i64","to_u64","to_f64","fmt","hash","mul","mul","mul","mul","cmp","abs","abs_sub","signum","is_positive","is_negative","neg","rem","rem","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","product","from_str_radix","bitxor_assign","bitxor_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","mul_assign","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","add","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","shr","not","bitand","bitand","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","div","checked_mul","partial_cmp","partial_cmp","to_bigint","abs","abs_sub","signum","is_positive","is_negative","one","set_one","is_one","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","pow","bitand_assign","bitand_assign","div_rem","div_floor","mod_floor","div_mod_floor","div_ceil","gcd","lcm","gcd_lcm","extended_gcd_lcm","divides","is_multiple_of","is_even","is_odd","next_multiple_of","prev_multiple_of","bitor_assign","bitor_assign","fmt","fmt","from_i64","from_i128","from_u64","from_u128","from_f64","fmt","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","rem","checked_div","neg","neg","nth_root","sqrt","cbrt","bitxor","bitxor","clone","clone","clone_from","zero","set_zero","is_zero","to_i64","to_i128","to_u64","to_u128","to_f32","to_f64","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","div_assign","checked_add","fmt","cmp","cmp","hash","hash","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","shl","fmt","fmt","fmt","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","shl_assign","from","from","from","from","from","from","from","from","from","from","from","from","from","checked_sub","to_biguint","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","rem_assign","bitor","bitor","from_str","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","shr_assign","sum","eq","eq","default","default","fmt","fmt","clone","fmt","fmt","partial_cmp","from_str","cmp","eq","ne","hash","default","from_str_radix","mul_assign","mul_assign","from_str","sub_assign","sub_assign","rem_assign","rem_assign","clone","add","add","sub","sub","zero","is_zero","to_i64","to_i128","to_u64","to_u128","to_f64","fmt","serialize","add_assign","add_assign","sum","sum","eq","from","from","from","from","from","from","from","from","from","from","abs","abs_sub","signum","is_positive","is_negative","one","fmt","div","div","partial_cmp","deserialize","div_assign","div_assign","try_from","try_from","fmt","fmt","from_i32","from_i64","from_u32","from_u64","from_f32","from_f64","hash","mul","mul","cmp","neg","rem","rem","from_str","from_str","from_str","from_str","from_str","from_str","sub_assign","sub_assign","sub_assign","clone","clone","clone","clone","clone","clone","add","add","add","add","add","add","add","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","from_offset","offset_from_local_date","offset_from_local_datetime","offset_from_utc_date","offset_from_utc_datetime","year","month","month0","day","day0","ordinal","ordinal0","weekday","iso_week","with_year","with_month","with_month0","with_day","with_day0","with_ordinal","with_ordinal0","year","month","month0","day","day0","ordinal","ordinal0","weekday","iso_week","with_year","with_month","with_month0","with_day","with_day0","with_ordinal","with_ordinal0","year","month","month0","day","day0","ordinal","ordinal0","weekday","iso_week","with_year","with_month","with_month0","with_day","with_day0","with_ordinal","with_ordinal0","add_assign","add_assign","add_assign","eq","ne","eq","ne","eq","ne","eq","eq","eq","ne","from","from","from","from","from","from","from","from","fmt","fmt","fmt","fmt","fmt","fmt","duration_round","duration_trunc","hour","minute","second","nanosecond","with_hour","with_minute","with_second","with_nanosecond","num_seconds_from_midnight","hour","minute","second","nanosecond","with_hour","with_minute","with_second","with_nanosecond","hour","minute","second","nanosecond","with_hour","with_minute","with_second","with_nanosecond","fix","fix","partial_cmp","partial_cmp","partial_cmp","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","hash","hash","hash","hash","hash","cmp","cmp","cmp","cmp","from_sql","from_sql","from_sql","from_sql","from_sql","from_sql","from_sql","from_sql","from_sql","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","from_sql_owned","to_sql","to_sql","to_sql","to_sql","to_sql","to_sql","to_sql","to_sql","to_sql","to_sql","into_sql","as_ref","from","from","from","from","from","from","from","from","from","from","into_iter","into_iter","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","eq","ne","eq","ne","eq","ne","eq","ne","eq","to_string","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","try_from","try_from","poll_next","sql_server","windows","new","host","port","database","instance_name","encryption","trust_cert","authentication","get_addr","from_ado_string","from_jdbc_string","connect","execute","query","simple_query","columns","next_resultset","into_results","into_first_result","into_row","rows_affected","total","name","column_type","columns","len","get","try_get","new","parse_bytes","with_scale","with_prec","sign","as_bigint_and_exponent","into_bigint_and_exponent","digits","abs","double","half","square","cube","sqrt","cbrt","inverse","round","is_integer","exp","normalized","new","from_biguint","from_slice","assign_from_slice","from_bytes_be","from_bytes_le","from_signed_bytes_be","from_signed_bytes_le","parse_bytes","from_radix_be","from_radix_le","to_bytes_be","to_bytes_le","to_u32_digits","to_u64_digits","iter_u32_digits","iter_u64_digits","to_signed_bytes_be","to_signed_bytes_le","to_str_radix","to_radix_be","to_radix_le","sign","magnitude","into_parts","bits","to_biguint","checked_add","checked_sub","checked_mul","checked_div","pow","modpow","sqrt","cbrt","nth_root","trailing_zeros","bit","set_bit","new","from_i128_with_scale","from_parts","from_scientific","scale","set_sign","set_sign_positive","set_sign_negative","set_scale","rescale","serialize","deserialize","is_negative","is_positive","is_sign_negative","is_sign_positive","min_value","max_value","trunc","fract","abs","floor","ceil","max","min","normalize","round","round_dp_with_strategy","round_dp","unpack","checked_add","checked_sub","checked_mul","checked_div","checked_rem","exp","exp_with_tolerance","powi","sqrt","ln","erf","norm_cdf","norm_pdf","from_str_radix","new_with_scale","dec_part","int_part","scale","value","precision","east","east_opt","west","west_opt","local_minus_utc","utc_minus_local","today","now","from_utc","date","time","timestamp","timestamp_millis","timestamp_nanos","timestamp_subsec_millis","timestamp_subsec_micros","timestamp_subsec_nanos","offset","timezone","with_timezone","checked_add_signed","checked_sub_signed","signed_duration_since","naive_utc","naive_local","parse_from_rfc2822","parse_from_rfc3339","parse_from_str","to_rfc2822","to_rfc3339","to_rfc3339_opts","format_with_items","format","from_ymd","from_ymd_opt","from_yo","from_yo_opt","from_isoywd","from_isoywd_opt","from_num_days_from_ce","from_num_days_from_ce_opt","from_weekday_of_month","from_weekday_of_month_opt","parse_from_str","and_time","and_hms","and_hms_opt","and_hms_milli","and_hms_milli_opt","and_hms_micro","and_hms_micro_opt","and_hms_nano","and_hms_nano_opt","succ","succ_opt","pred","pred_opt","checked_add_signed","checked_sub_signed","signed_duration_since","format_with_items","format","iter_days","iter_weeks","new","from_timestamp","from_timestamp_opt","parse_from_str","date","time","timestamp","timestamp_millis","timestamp_nanos","timestamp_subsec_millis","timestamp_subsec_micros","timestamp_subsec_nanos","checked_add_signed","checked_sub_signed","signed_duration_since","format_with_items","format","from_hms","from_hms_opt","from_hms_milli","from_hms_milli_opt","from_hms_micro","from_hms_micro_opt","from_hms_nano","from_hms_nano_opt","from_num_seconds_from_midnight","from_num_seconds_from_midnight_opt","parse_from_str","overflowing_add_signed","overflowing_sub_signed","signed_duration_since","format_with_items","format","new","days","seconds_fragments","new","days","seconds_fragments","new","days","new","increments","scale","new","date","time","new","datetime2","offset","db_name","owner","collection","new","schema","into_string","nil","from_fields","from_fields_le","from_u128","from_u128_le","from_slice","from_bytes","parse_str","to_hyphenated","to_hyphenated_ref","to_simple","to_simple_ref","to_urn","to_urn_ref","new_v1","to_timestamp","new_v3","new_v4","NAMESPACE_DNS","NAMESPACE_OID","NAMESPACE_URL","NAMESPACE_X500","get_variant","get_version_num","get_version","as_fields","to_fields_le","as_u128","to_u128_le","as_bytes","is_nil","encode_buffer"],"q":["tiberius","tiberius::error","","","","","","","","","","","","","","","","","","","","","","tiberius::error::Error","","tiberius::error","","","","","","","","","","tiberius::error::Error","","tiberius::error","","","","","","","tiberius","tiberius::numeric","","","","","","","","tiberius","tiberius::time","tiberius::time::chrono","","","","","","tiberius::time","","","","","","tiberius","tiberius::xml","","tiberius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::numeric","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::time::chrono","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::time","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::xml","","","","","","","","","","","","","","","","","","tiberius","","","","","","","","","","","","","","","","","","","tiberius::error","","","","","","tiberius::numerictiberius","","","","","","","","","","","","tiberius::numeric","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::time::chrono","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius","tiberius::numeric","","","tiberius::time::chrono","","","","","tiberius","tiberius::numeric","tiberius::xml","tiberius::numeric","","tiberius::time::chrono","","","","","tiberius::numeric","tiberius::xml","tiberius","tiberius::numeric","","tiberius::time::chrono","","","","","tiberius::xml","","tiberius::error","","","","","","","","","","tiberius","","","","tiberius::error","tiberius","","tiberius::error","tiberius::numeric","tiberius::time","","","","","","tiberius::xml","","tiberius","","","","tiberius::numeric","tiberius::time","","","","","","","","","","","tiberius::xml","","","","tiberius","tiberius::xml","tiberius","","","tiberius::error","tiberius","","","","","","tiberius::error","tiberius::numeric","tiberius::time","","","","","","tiberius::xml","","tiberius","tiberius::error","","tiberius::numeric","tiberius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::numeric","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::time::chrono","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tiberius::time","","","","","","","","","","","","","","","","","tiberius::xml","","","","","","tiberius","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Error module","An error token returned from the server.","A list specifying general categories of I/O error.","An entity was not found, often a file.","The operation lacked the necessary privileges to complete.","The connection was refused by the remote server.","The connection was reset by the remote server.","The connection was aborted (terminated) by the remote â€¦","The network operation failed because it was not connected â€¦","A socket address could not be bound because the address â€¦","A nonexistent interface was requested or the requested â€¦","The operation failed because a pipe was closed.","An entity already exists, often a file.","The operation needs to block to complete, but the â€¦","A parameter was incorrect.","Data not valid for the operation were encountered.","The I/O operationâ€™s timeout expired, causing it to be â€¦","An error returned when an operation could not be â€¦","This operation was interrupted.","Any I/O error not part of this list.","An error returned when an operation could not be â€¦","A unified error enum that contains several errors that â€¦","An error occured when performing I/O to the server.","A list specifying general categories of I/O error.","The error description.","An error happened during the request or response parsing.","Server responded with encoding not supported.","Conversion failure from one type to another.","Tried to convert data to UTF-8 that was not valid.","Tried to convert data to UTF-16 that was not valid.","Tried to parse an integer that was not an integer.","An error returned by the server.","An error in the TLS handshake.","An error from the GSSAPI library.","Server requested a connection to an alternative address.","The requested hostname","The requested port.","The error code, see descriptions from the manual.","The error state, used as a modifier to the error number.","The class (severity) of the error. A class of less than â€¦","The error message returned from the server.","The server name.","The name of the stored procedure causing the error.","The line number in the SQL batch or stored procedure that â€¦","Representations of numeric types.","A big decimal type.","A big signed integer type.","A Sign is a <code>BigInt</code>â€™s composing element.","","","","<code>Decimal</code> represents a 128 bit representation of a â€¦","Represent a sql Decimal / Numeric type. It is stored in a â€¦","Date and time handling.","Mappings between TDS and and Chrono types (with <code>chrono</code> â€¦","The time zone with fixed offset, from UTC-23:59:59 to â€¦","The UTC time zone. This is the most efficient time zone â€¦","ISO 8601 combined date and time with time zone.","ISO 8601 calendar date without timezone. Allows for every â€¦","ISO 8601 combined date and time without timezone.","ISO 8601 time without timezone. Allows for the nanosecond â€¦","A presentation of <code>datetime</code> type in the server.","A presentation of <code>smalldatetime</code> type in the server.","A presentation of <code>date</code> type in the server.","A presentation of <code>time</code> type in the server.","A presentation of <code>datetime2</code> type in the server.","A presentation of <code>datetimeoffset</code> type in the server.","The XML containers","Provides information of the location for the schema.","A representation of XML data in TDS. Holds the data as a â€¦","Defines the method of authentication to the server.","Authenticate directly with SQL Server.","Authenticate with Windows credentials.","Authenticate as the currently logged in user. On Windows â€¦","<code>Client</code> is the main entry point to the SQL Server, â€¦","The <code>Config</code> struct contains all configuration information â€¦","A conversion trait from a TDS type by-reference.","Returns the value, <code>None</code> being a null value, copying the â€¦","A conversion trait from a TDS type by-value.","Returns the value, <code>None</code> being a null value, taking the â€¦","A set of <code>Streams</code> of <code>Rows</code> resulting from a <code>SELECT</code> query. â€¦","A result from a query execution, listing the number of â€¦","A column of data from a query.","The type of the column.","The column doesnâ€™t have a specified type.","A bit or boolean value.","An 8-bit integer value.","A 16-bit integer value.","A 32-bit integer value.","A 64-bit integer value.","A 32-bit datetime value.","A 32-bit floating point value.","A 64-bit floating point value.","Money value.","A TDS 7.2 datetime value.","A 32-bit money value.","A unique identifier, UUID.","N-bit integer value (variable).","A bit value in a variable-length type.","A decimal value (same as <code>Numericn</code>).","A numeric value (same as <code>Decimaln</code>).","A n-bit floating point value.","A n-bit datetime value (TDS 7.2).","A n-bit date value (TDS 7.3).","A n-bit time value (TDS 7.3).","A n-bit datetime2 value (TDS 7.3).","A n-bit datetime value with an offset (TDS 7.3).","A variable binary value.","A large variable string value.","A binary value.","A string value.","A variable string value with UTF-16 encoding.","A string value with UTF-16 encoding.","A XML value.","User-defined type.","A text value (deprecated).","A image value (deprecated).","A text value with UTF-16 encoding (deprecated).","An SQL variant type.","A row of data from a query.","An extension trait to a <code>TcpStream</code> to find a port and â€¦","If the given builder defines a named instance, finds the â€¦","A container of a value that can be represented as a TDS â€¦","8-bit integer, unsigned.","16-bit integer, signed.","32-bit integer, signed.","64-bit integer, signed.","32-bit floating point number.","64-bit floating point number.","Boolean.","A string value.","A Guid (UUID) value.","Binary data.","Numeric value (a decimal).","XML data.","DateTime value.","A small DateTime value.","Time value.","Date value.","DateTime2 value.","DateTime2 value with an offset.","The configured encryption level specifying if encryption â€¦","Only use encryption for the login procedure","Encrypt everything if possible","Do not encrypt anything","Encrypt everything and fail if not possible","A by-value conversion trait to a TDS type.","Convert to a value understood by the SQL Server. â€¦","A conversion trait to a TDS type.","Convert to a value understood by the SQL Server. â€¦","A Universally Unique Identifier (UUID).","An alias for a result that holds crateâ€™s error type as â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the floor value of the average of <code>self</code> and <code>other</code>.","Returns the ceil value of the average of <code>self</code> and <code>other</codereates and initializes a BigDecimal.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Complete ordering implementation for BigDecimal","","","","","","","","","","","","","","","","","","","","","","","","Creates and initializes a BigInt.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the Greatest Common Divisor (GCD) of the â€¦","Calculates the Lowest Common Multiple (LCM) of the number â€¦","Calculates the Greatest Common Divisor (GCD) and Lowest â€¦","Greatest common divisor, least common multiple, and â€¦","Deprecated, use <code>is_multiple_of</code> instead.","Returns <code>true</code> if the number is a multiple of <code>other</code>.","Returns <code>true</code> if the number is divisible by <code>2</code>.","Returns <code>true</code> if the number is not divisible by <code>2</code>.","Rounds up to nearest multiple of argument.","Rounds down to nearest multiple of argument.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Negate Sign valueeturns the year number in the calendar date.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of week.","","Makes a new <code>NaiveDate</code> with the year number changed.","Makes a new <code>NaiveDate</code> with the month number (starting â€¦","Makes a new <code>NaiveDate</code> with the month number (starting â€¦","Makes a new <code>NaiveDate</code> with the day of month (starting â€¦","Makes a new <code>NaiveDate</code> with the day of month (starting â€¦","Makes a new <code>NaiveDate</code> with the day of year (starting from â€¦","Makes a new <code>NaiveDate</code> with the day of year (starting from â€¦","","","","","","","","","","","","","","","","","Returns the year number in the calendar date.","Returns the month number starting from 1.","Returns the month number starting from 0.","Returns the day of month starting from 1.","Returns the day of month starting from 0.","Returns the day of year starting from 1.","Returns the day of year starting from 0.","Returns the day of week.","","Makes a new <code>NaiveDateTime</code> with the year number changed.","Makes a new <code>NaiveDateTime</code> with the month number (starting â€¦","Makes a new <code>NaiveDateTime</code> with the month number (starting â€¦","Makes a new <code>NaiveDateTime</code> with the day of month (starting â€¦","Makes a new <code>NaiveDateTime</code> with the day of month (starting â€¦","Makes a new <code>NaiveDateTime</code> with the day of year (starting â€¦","Makes a new <code>NaiveDateTime</code> with the day of year (starting â€¦","","","","","","","","","","","","","","","Convert this <code>DateTime<Utc></code> instance into a <code>DateTime<Local></code>â€¦","","Convert this <code>DateTime<Local></code> instance into a <code>DateTime<Utc></code>â€¦","Convert this <code>DateTime<Utc></code> instance into a â€¦","Convert this <code>DateTime<FixedOffset></code> instance into a â€¦","Convert this <code>DateTime<Local></code> instance into a â€¦","Convert this <code>DateTime<FixedOffset></code> instance into a â€¦","","","","","","","","","Returns the hour number from 0 to 23.","Returns the minute number from 0 to 59.","Returns the second number from 0 to 59.","Returns the number of nanoseconds since the whole â€¦","Makes a new <code>NaiveTime</code> with the hour number changed.","Makes a new <code>NaiveTime</code> with the minute number changed.","Makes a new <code>NaiveTime</code> with the second number changed.","Makes a new <code>NaiveTime</code> with nanoseconds since the whole â€¦","Returns the number of non-leap seconds past the last â€¦","","","","","","","","","Returns the hour number from 0 to 23.","Returns the minute number from 0 to 59.","Returns the second number from 0 to 59.","Returns the number of nanoseconds since the whole â€¦","Makes a new <code>NaiveDateTime</code> with the hour number changed.","Makes a new <code>NaiveDateTime</code> with the minute number changed.","Makes a new <code>NaiveDateTime</code> with the second number changed.","Makes a new <code>NaiveDateTime</code> with nanoseconds since the â€¦","","","","","Compare two DateTimes based on their true time, ignoring â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Construct a new SQL Server authentication configuration.","Construct a new Windows authentication configuration.","Create a new <code>Config</code> with the default settings.","A host or ip address to connect to.","The server port.","The database to connect to.","The instance name as defined in the SQL Browser. Only â€¦","Set the preferred encryption level.","If set, the server certificate will not be validated and â€¦","Sets the authentication method.","Get the host address including port","Creates a new <code>Config</code> from an ADO.NET connection string.","Creates a new <code>Config</code> from a JDBC connection string.","Uses an instance of <code>Config</code> to specify the connection â€¦","Executes SQL statements in the SQL Server, returning the â€¦","Executes SQL statements in the SQL Server, returning â€¦","Execute multiple queries, delimited with <code>;</code> and return â€¦","Names of the columns of the current resultset. Order is â€¦","Returns <code>true</code> if stream has more result sets available. â€¦","Collects results from all queries in the stream into â€¦","Collects the output of the first query, dropping any â€¦","Collects the first row from the output of the first â€¦","A slice of numbers of rows affected in the same order as â€¦","Aggregates all resulting row counts into a sum.","The name of the column.","The type of the column.","Columns defining the row data. Columns listed here are in â€¦","Returns the number of columns in the row.","Retrieve a column value for a given column index, which â€¦","Retrieve a columnâ€™s value for a given column index.","Creates and initializes a <code>BigDecimal</code>.","Creates and initializes a <code>BigDecimal</code>.","Return a new BigDecimal object equivalent to self, with â€¦","Return a new BigDecimal object with precision set to new â€¦","Return the sign of the <code>BigDecimal</code> as <code>num::bigint::Sign</code>.","Return the internal big integer value and an exponent. â€¦","Convert into the internal big integer value and an â€¦","Number of digits in the non-scaled integer representation","Compute the absolute value of number","","Divide this efficiently by 2","","","Take the square root of the number","Take the cube root of the number","Compute the reciprical of the number: x-1","Return number rounded to round_digits precision after the â€¦","Return true if this number has zero fractional part (is â€¦","Evaluate the natural-exponential function ex","","Creates and initializes a BigInt.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>.","Reinitializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code> from an array of bytes inâ€¦","Creates and initializes a <code>BigInt</code> from an array of bytes â€¦","Creates and initializes a <code>BigInt</code>.","Creates and initializes a <code>BigInt</code>. Each u8 of the input â€¦","Creates and initializes a <code>BigInt</code>. Each u8 of the input â€¦","Returns the sign and the byte representation of the <code>BigInt</code>â€¦","Returns the sign and the byte representation of the <code>BigInt</code>â€¦","Returns the sign and the <code>u32</code> digits representation of the â€¦","Returns the sign and the <code>u64</code> digits representation of the â€¦","Returns an iterator of <code>u32</code> digits representation of the â€¦","Returns an iterator of <code>u64</code> digits representation of the â€¦","Returns the twoâ€™s-complement byte representation of the â€¦","Returns the twoâ€™s-complement byte representation of the â€¦","Returns the integer formatted as a string in the given â€¦","Returns the integer in the requested base in big-endian â€¦","Returns the integer in the requested base in â€¦","Returns the sign of the <code>BigInt</code> as a <code>Sign</code>.","Returns the magnitude of the <code>BigInt</code> as a <code>BigUint</code>.","Convert this <code>BigInt</code> into its <code>Sign</code> and <code>BigUint</code> magnitude, â€¦","Determines the fewest bits necessary to express the <code>BigInt</code>â€¦","Converts this <code>BigInt</code> into a <code>BigUint</code>, if itâ€™s not â€¦","","","","","Returns <code>self ^ exponent</code>.","Returns <code>(self ^ exponent) mod modulus</code>","Returns the truncated principal square root of <code>self</code> â€“ â€¦","Returns the truncated principal cube root of <code>self</code> â€“ see â€¦","Returns the truncated principal <code>n</code>th root of <code>self</code> â€“ See â€¦","Returns the number of least-significant bits that are â€¦","Returns whether the bit in position <code>bit</code> is set, using the â€¦","Sets or clears the bit in the given position, using the â€¦","Returns a <code>Decimal</code> with a 64 bit <code>m</code> representation and â€¦","Creates a <code>Decimal</code> using a 128 bit signed <code>m</code> representation â€¦","Returns a <code>Decimal</code> using the instances constituent parts.","Returns a <code>Result</code> which if successful contains the <code>Decimal</code> â€¦","Returns the scale of the decimal number, otherwise known â€¦","An optimized method for changing the sign of a decimal â€¦","An optimized method for changing the sign of a decimal â€¦","An optimized method for changing the sign of a decimal â€¦","An optimized method for changing the scale of a decimal â€¦","Modifies the <code>Decimal</code> to the given scale, attempting to do â€¦","Returns a serialized version of the decimal number. The â€¦","Deserializes the given bytes into a decimal number. The â€¦","Returns <code>true</code> if the decimal is negative.","Returns <code>true</code> if the decimal is positive.","Returns <code>true</code> if the sign bit of the decimal is negative.","Returns <code>true</code> if the sign bit of the decimal is positive.","Returns the minimum possible number that <code>Decimal</code> can â€¦","Returns the maximum possible number that <code>Decimal</code> can â€¦","Returns a new <code>Decimal</code> integral with no fractional portion.â€¦","Returns a new <code>Decimal</code> representing the fractional portion â€¦","Computes the absolute value of <code>self</code>.","Returns the largest integer less than or equal to a â€¦","Returns the smallest integer greater than or equal to a â€¦","Returns the maximum of the two numbers.","Returns the minimum of the two numbers.","Strips any trailing zeroâ€™s from a <code>Decimal</code> and converts â€¦","Returns a new <code>Decimal</code> number with no fractional portion â€¦","Returns a new <code>Decimal</code> number with the specified number of â€¦","Returns a new <code>Decimal</code> number with the specified number of â€¦","Convert <code>Decimal</code> to an internal representation of the â€¦","Checked addition. Computes <code>self + other</code>, returning <code>None</code> â€¦","Checked subtraction. Computes <code>self - other</code>, returning <code>None</code>â€¦","Checked multiplication. Computes <code>self * other</code>, returning â€¦","Checked division. Computes <code>self / other</code>, returning <code>None</code> â€¦","Checked remainder. Computes <code>self % other</code>, returning <code>None</code> â€¦","The estimated exponential function, ex, rounded to 8 â€¦","The estimated exponential function, ex, rounded to 8 â€¦","Raise self to the given unsigned integer exponent: xy","The square root of a Decimal. Uses a standard Babylonian â€¦","The natural logarithm for a Decimal. Uses a fast â€¦","Abramowitz Approximation of Error Function from wikipedia","The Cumulative distribution function for a Normal â€¦","The Probability density function for a Normal distribution","","Creates a new Numeric value.","Extract the decimal part.","Extract the integer part.","The scale (where is the decimal point) of the value.","The internal integer value","The precision of the <code>Number</code> as a number of digits.","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with â€¦","Makes a new <code>FixedOffset</code> for the Eastern Hemisphere with â€¦","Makes a new <code>FixedOffset</code> for the Western Hemisphere with â€¦","Makes a new <code>FixedOffset</code> for the Western Hemisphere with â€¦","Returns the number of seconds to add to convert from UTC â€¦","Returns the number of seconds to add to convert from the â€¦","Returns a <code>Date</code> which corresponds to the current date.","Returns a <code>DateTime</code> which corresponds to the current date.","Makes a new <code>DateTime</code> with given <em>UTC</em> datetime and offset. â€¦","Retrieves a date component.","Retrieves a time component. Unlike <code>date</code>, this is not â€¦","Returns the number of non-leap seconds since January 1, â€¦","Returns the number of non-leap-milliseconds since January â€¦","Returns the number of non-leap-nanoseconds since January â€¦","Returns the number of milliseconds since the last second â€¦","Returns the number of microseconds since the last second â€¦","Returns the number of nanoseconds since the last second â€¦","Retrieves an associated offset from UTC.","Retrieves an associated time zone.","Changes the associated time zone. This does not change â€¦","Adds given <code>Duration</code> to the current date and time.","Subtracts given <code>Duration</code> from the current date and time.","Subtracts another <code>DateTime</code> from the current date and time.â€¦","Returns a view to the naive UTC datetime.","Returns a view to the naive local datetime.","Parses an RFC 2822 date and time string such as â€¦","Parses an RFC 3339 and ISO 8601 date and time string such â€¦","Parses a string with the specified format string and â€¦","Returns an RFC 2822 date and time string such as â€¦","Returns an RFC 3339 and ISO 8601 date and time string â€¦","Return an RFC 3339 and ISO 8601 date and time string with â€¦","Formats the combined date and time with the specified â€¦","Formats the combined date and time with the specified â€¦","Makes a new <code>NaiveDate</code> from the calendar date (year, month â€¦","Makes a new <code>NaiveDate</code> from the calendar date (year, month â€¦","Makes a new <code>NaiveDate</code> from the ordinal date (year and day â€¦","Makes a new <code>NaiveDate</code> from the ordinal date (year and day â€¦","Makes a new <code>NaiveDate</code> from the ISO week date (year, week â€¦","Makes a new <code>NaiveDate</code> from the ISO week date (year, week â€¦","Makes a new <code>NaiveDate</code> from a dayâ€™s number in the â€¦","Makes a new <code>NaiveDate</code> from a dayâ€™s number in the â€¦","Makes a new <code>NaiveDate</code> by counting the number of â€¦","Makes a new <code>NaiveDate</code> by counting the number of â€¦","Parses a string with the specified format string and â€¦","Makes a new <code>NaiveDateTime</code> from the current date and given â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDateTime</code> from the current date, hour, â€¦","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the next calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","Makes a new <code>NaiveDate</code> for the previous calendar date.","Adds the <code>days</code> part of given <code>Duration</code> to the current date.","Subtracts the <code>days</code> part of given <code>Duration</code> from the â€¦","Subtracts another <code>NaiveDate</code> from the current date. â€¦","Formats the date with the specified formatting items. â€¦","Formats the date with the specified format string. See â€¦","Returns an iterator that steps by days until the last â€¦","Returns an iterator that steps by weeks until the last â€¦","Makes a new <code>NaiveDateTime</code> from date and time components. â€¦","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and â€¦","Makes a new <code>NaiveDateTime</code> corresponding to a UTC date and â€¦","Parses a string with the specified format string and â€¦","Retrieves a date component.","Retrieves a time component.","Returns the number of non-leap seconds since the midnight â€¦","Returns the number of non-leap <em>milliseconds</em> since â€¦","Returns the number of non-leap <em>nanoseconds</em> since midnight â€¦","Returns the number of milliseconds since the last whole â€¦","Returns the number of microseconds since the last whole â€¦","Returns the number of nanoseconds since the last whole â€¦","Adds given <code>Duration</code> to the current date and time.","Subtracts given <code>Duration</code> from the current date and time.","Subtracts another <code>NaiveDateTime</code> from the current date and â€¦","Formats the combined date and time with the specified â€¦","Formats the combined date and time with the specified â€¦","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveTime</code> from hour, minute and second.","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from hour, minute, second and â€¦","Makes a new <code>NaiveTime</code> from the number of seconds since â€¦","Makes a new <code>NaiveTime</code> from the number of seconds since â€¦","Parses a string with the specified format string and â€¦","Adds given <code>Duration</code> to the current time, and also returns â€¦","Subtracts given <code>Duration</code> from the current time, and also â€¦","Subtracts another <code>NaiveTime</code> from the current time. â€¦","Formats the time with the specified formatting items. â€¦","Formats the time with the specified format string. See â€¦","Construct a new <code>DateTime</code> instance.","Days since 1st of January, 1900 (including the negative â€¦","1/300 of a second, so a value of 300 equals 1 second â€¦","Construct a new <code>SmallDateTime</code> instance.","Days since 1st of January, 1900.","1/300 of a second, so a value of 300 equals 1 second â€¦","Construct a new <code>Date</code>","The number of days from 1st of January, year 1.","Construct a new <code>Time</code>","Number of 10^-n second increments since midnight, where <code>n</code> â€¦","The accuracy of the increments.","Construct a new <code>DateTime2</code> from the date and time â€¦","The date component.","The time component.","Construct a new <code>DateTimeOffset</code> from a <code>datetime2</code>, offset â€¦","The date and time part.","Number of minutes from UTC.","Specifies the name of the database where the schema â€¦","Specifies the name of the relational schema containing â€¦","Specifies the name of the XML schema collection to which â€¦","Create a new XmlData with the given string. Validation of â€¦","Returns information about the schema of the XML file, if â€¦","Takes the XML string out from the struct.","The â€˜nil UUIDâ€™.","Creates a UUID from four field values in big-endian order.","Creates a UUID from four field values in little-endian â€¦","Creates a UUID from a 128bit value in big-endian order.","Creates a UUID from a 128bit value in little-endian order.","Creates a UUID using the supplied big-endian bytes.","Creates a UUID using the supplied big-endian bytes.","Parses a <code>Uuid</code> from a string of hexadecimal digits with â€¦","Get a <code>Hyphenated</code> formatter.","Get a borrowed <code>HyphenatedRef</code> formatter.","Get a <code>Simple</code> formatter.","Get a borrowed <code>SimpleRef</code> formatter.","Get a <code>Urn</code> formatter.","Get a borrowed <code>UrnRef</code> formatter.","Create a new UUID (version 1) using a time value + â€¦","Returns an optional <code>Timestamp</code> storing the timestamp and â€¦","Creates a UUID using a name from a namespace, based on â€¦","Creates a random UUID.","UUID namespace for Domain Name System (DNS).","UUID namespace for ISO Object Identifiers (OIDs).","UUID namespace for Uniform Resource Locators (URLs).","UUID namespace for X.500 Distinguished Names (DNs).","Returns the variant of the UUID structure.","Returns the version number of the UUID.","Returns the version of the UUID.","Returns the four field values of the UUID in big-endian â€¦","Returns the four field values of the UUID in â€¦","Returns a 128bit value containing the UUID data.","Returns a 128bit little-endian value containing the UUID â€¦","Returns an array of 16 octets containing the UUID data.","Tests if the UUID is nil.","A buffer that can be used for <code>encode_...</code> calls, that is â€¦"],"i":[0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2,3,3,2,2,2,2,2,2,2,2,2,2,4,4,5,5,5,5,5,5,5,0,0,0,0,6,6,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,7,7,0,0,0,8,0,9,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,0,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,0,13,13,13,13,0,14,0,15,0,0,7,7,7,7,7,7,7,7,7,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,5,5,5,5,5,5,5,5,5,5,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,10,10,10,10,10,10,10,10,10,21,21,21,21,21,21,21,12,12,12,12,12,12,12,12,12,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,6,6,6,6,6,6,6,6,6,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,25,25,25,25,26,26,26,26,26,26,26,26,26,26,27,27,27,27,27,27,27,27,27,27,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,32,32,32,32,32,32,33,33,33,33,33,33,33,33,33,34,34,34,34,34,34,34,34,34,35,35,35,35,35,35,35,35,35,36,36,36,36,36,36,36,36,36,37,37,37,37,37,37,37,37,37,38,38,38,38,38,38,38,38,38,39,39,39,39,39,39,39,39,39,13,13,13,13,13,13,13,13,13,40,40,40,40,40,40,40,40,40,40,1,1,1,1,1,1,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,23,23,23,23,23,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,6,23,23,40,40,40,40,40,40,40,40,40,40,40,40,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,28,31,29,28,28,30,31,30,29,28,31,30,29,27,26,28,29,28,31,30,30,31,30,28,29,28,28,29,31,31,30,30,31,27,27,27,27,27,26,26,26,26,26,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,29,26,26,31,31,29,29,28,27,30,30,28,28,28,28,28,28,28,28,27,30,28,31,26,29,28,28,31,31,31,31,31,31,31,31,31,28,28,28,28,28,28,28,28,30,30,30,30,30,30,30,30,27,26,29,31,28,30,31,27,29,30,28,26,31,30,28,26,29,28,30,31,29,40,25,24,22,30,31,29,28,28,40,25,39,24,22,30,31,29,28,28,25,39,40,24,22,29,31,30,28,28,39,39,2,2,2,2,2,2,2,2,2,2,19,21,7,16,2,10,12,5,25,32,33,34,35,36,37,38,39,13,16,7,7,25,32,32,33,33,34,34,35,36,36,37,37,38,38,39,39,13,39,7,16,17,2,18,19,20,10,21,12,5,25,32,33,34,35,36,37,38,39,13,2,5,25,13,13,18,7,7,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,18,19,19,20,20,21,21,21,21,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,25,25,25,25,25,25,26,26,26,26,26,26,27,27,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,32,32,32,33,33,33,34,34,35,35,35,36,36,36,37,37,37,38,38,38,39,39,39,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["u32",15]],[[],["u8",15]],[[],["u8",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[],["u32",15]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["columndata",4]],[["option",4],["result",6]]],null,[[["columndata",4]],[["option",4],["result",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["config",3]],[["box",3],["pin",3]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["columndata",4]],null,[[],["columndata",4]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["u16",15]]],[[["u16",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["errorkind",4]],[["ordering",4],["option",4]]],[[],["errorkind",4]],[[["errorkind",4]],["ordering",4]],[[]],[[["formatter",3]],[["result",4],["error",3]]],[[["errorkind",4]],["bool",15]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[],["bool",15]],[[["bigdecimal",3]]],[[["bigdecimal",3]]],[[["str",15]],[["result",4],["parsebigdecimalerror",4],["bigdecimal",3]]],[[["bigint",3]]],[[["bigint",3]]],[[["bigdecimal",3]]],[[["bigdecimal",3]]],[[],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["u32",15],["str",15]],[["result",4],["parsebigdecimalerror",4],["bigdecimal",3]]],[[],[["bigint",3],["option",4]]],[[["bigint",3]]],[[["bigdecimal",3]]],[[["bigdecimal",3]]],[[["bigint",3]]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[["bigdecimal",3]],["bool",15]],[[["u32",15]],["bigdecimal",3]],[[["i32",15]],["bigdecimal",3]],[[["i16",15]],["bigdecimal",3]],[[["u16",15]],["bigdecimal",3]],[[["u8",15]],["bigdecimal",3]],[[["i8",15]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["u64",15]],["bigdecimal",3]],[[["i64",15]],["bigdecimal",3]],[[],["bigdecimal",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["i64",15]],[["bigdecimal",3],["option",4]]],[[["u64",15]],[["bigdecimal",3],["option",4]]],[[["f32",15]],[["bigdecimal",3],["option",4]]],[[["f64",15]],[["bigdecimal",3],["option",4]]],[[["bigdecimal",3]],["bigdecimal",3]],[[["i16",15]]],[[["i64",15]]],[[["i32",15]]],[[["i8",15]]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigdecimal",3]],[["ordering",4],["option",4]]],[[["f64",15]],[["result",4],["bigdecimal",3]]],[[["f32",15]],[["result",4],["bigdecimal",3]]],[[],["bigdecimal",3]],[[],[["i64",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["option",4],["f64",15]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigint",3]],["bigdecimal",3]],[[["bigdecimal",3]],["ordering",4]],[[],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[],["bigdecimal",3]],[[],["bool",15]],[[],["bool",15]],[[],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["bigdecimal",3]],["bigdecimal",3]],[[["i16",15]]],[[["isize",15]]],[[["u8",15]]],[[["i32",15]]],[[["u64",15]]],[[["bigint",3]]],[[["i8",15]]],[[["bigint",3]]],[[["usize",15]]],[[["i64",15]]],[[["u128",15]]],[[["u32",15]]],[[["u16",15]]],[[["i128",15]]],[[],["bigint",3]],[[["u32",15],["str",15]],[["result",4],["bigint",3],["parsebiginterror",3]]],[[["bigint",3]]],[[["bigint",3]]],[[["i16",15]]],[[["i8",15]]],[[["isize",15]]],[[["u16",15]]],[[["i64",15]]],[[["usize",15]]],[[["u8",15]]],[[["bigint",3]]],[[["u32",15]]],[[["i32",15]]],[[["u64",15]]],[[["bigint",3]]],[[["u128",15]]],[[["i128",15]]],[[["bigint",3]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["sign",4]],[["ordering",4],["option",4]]],[[["bigint",3]],[["ordering",4],["option",4]]],[[],[["bigint",3],["option",4]]],[[],["bigint",3]],[[["bigint",3]],["bigint",3]],[[],["bigint",3]],[[],["bool",15]],[[],["bool",15]],[[],["bigint",3]],[[]],[[],["bool",15]],[[["i8",15]]],[[["u16",15]]],[[["i32",15]]],[[["u64",15]]],[[["u32",15]]],[[["u8",15]]],[[["i16",15]]],[[["i128",15]]],[[["bigint",3]]],[[["i64",15]]],[[["bigint",3]]],[[["isize",15]]],[[["u128",15]]],[[["usize",15]]],[[["u8",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["biguint",3]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["biguint",3]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["bigint",3]]],[[["bigint",3]]],[[["bigint",3]]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]]],[[["bigint",3]]],[[["bigint",3]],["bool",15]],[[["bigint",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]]],[[["bigint",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["i64",15]],[["bigint",3],["option",4]]],[[["i128",15]],[["bigint",3],["option",4]]],[[["u64",15]],[["bigint",3],["option",4]]],[[["u128",15]],[["bigint",3],["option",4]]],[[["f64",15]],[["bigint",3],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["i32",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["bigint",3]],[["bigint",3],["option",4]]],[[],["bigint",3]],[[],["sign",4]],[[["u32",15]],["bigint",3]],[[],["bigint",3]],[[],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[],["sign",4]],[[],["bigint",3]],[[["bigint",3]]],[[],["bigint",3]],[[]],[[],["bool",15]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["f32",15],["option",4]]],[[],[["option",4],["f64",15]]],[[["u32",15]]],[[["i32",15]]],[[["isize",15]]],[[["i128",15]]],[[["bigint",3]]],[[["u8",15]]],[[["i8",15]]],[[["i16",15]]],[[["u64",15]]],[[["bigint",3]]],[[["i64",15]]],[[["u128",15]]],[[["u16",15]]],[[["usize",15]]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["bigint",3]],["ordering",4]],[[["sign",4]],["ordering",4]],[[]],[[]],[[["u64",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["sign",4]],["sign",4]],[[["u64",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["i64",15]]],[[["i16",15]]],[[["isize",15]]],[[["u128",15]]],[[["i16",15]]],[[["u16",15]]],[[["i8",15]]],[[["u32",15]]],[[["usize",15]]],[[["u8",15]]],[[["u64",15]]],[[["i32",15]]],[[["u128",15]]],[[["usize",15]]],[[["i128",15]]],[[["i128",15]]],[[["i8",15]]],[[["u64",15]]],[[["u16",15]]],[[["i64",15]]],[[["i32",15]]],[[["u32",15]]],[[["u8",15]]],[[["isize",15]]],[[["i64",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["biguint",3]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["bigint",3]],[["bigint",3],["option",4]]],[[],[["biguint",3],["option",4]]],[[["u16",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["u8",15]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["u128",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["u16",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["usize",15]],["bigint",3]],[[["i32",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["u32",15]],["bigint",3]],[[["isize",15]],["bigint",3]],[[["u64",15]],["bigint",3]],[[["i8",15]],["bigint",3]],[[["i16",15]],["bigint",3]],[[["i64",15]],["bigint",3]],[[["i128",15]],["bigint",3]],[[["i8",15]]],[[["bigint",3]]],[[["usize",15]]],[[["u128",15]]],[[["u8",15]]],[[["bigint",3]]],[[["i16",15]]],[[["u16",15]]],[[["i64",15]]],[[["i128",15]]],[[["i32",15]]],[[["u32",15]]],[[["u64",15]]],[[["isize",15]]],[[["bigint",3]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[["str",15]],[["result",4],["bigint",3],["parsebiginterror",3]]],[[["i128",15]]],[[["i64",15]]],[[["i32",15]]],[[["i128",15]]],[[["i16",15]]],[[["u64",15]]],[[["i32",15]]],[[["u32",15]]],[[["u8",15]]],[[["u32",15]]],[[["u16",15]]],[[["u64",15]]],[[["u128",15]]],[[["u16",15]]],[[["u8",15]]],[[["usize",15]]],[[["u128",15]]],[[["i64",15]]],[[["usize",15]]],[[["isize",15]]],[[["i16",15]]],[[["i8",15]]],[[["i8",15]]],[[["isize",15]]],[[],["bigint",3]],[[["sign",4]],["bool",15]],[[["bigint",3]],["bool",15]],[[],["bigint",3]],[[],["uuid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["uuid",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["uuid",3]],[["ordering",4],["option",4]]],[[["str",15]],[["result",4],["uuid",3]]],[[["uuid",3]],["ordering",4]],[[["uuid",3]],["bool",15]],[[["uuid",3]],["bool",15]],[[]],[[],["decimal",3]],[[["u32",15],["str",15]],[["decimal",3],["result",4]]],[[["decimal",3]]],[[["decimal",3]]],[[["str",15]],[["result",4],["decimal",3]]],[[["decimal",3]]],[[["decimal",3]]],[[["decimal",3]]],[[["decimal",3]]],[[],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[],["decimal",3]],[[],["bool",15]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i128",15]]],[[],[["option",4],["u64",15]]],[[],[["u128",15],["option",4]]],[[],[["option",4],["f64",15]]],[[["formatter",3]],[["result",4],["error",3]]],[[],["result",4]],[[["decimal",3]]],[[["decimal",3]]],[[],["decimal",3]],[[],["decimal",3]],[[["decimal",3]],["bool",15]],[[["i16",15]],["decimal",3]],[[["u32",15]],["decimal",3]],[[["i8",15]],["decimal",3]],[[["i32",15]],["decimal",3]],[[["u16",15]],["decimal",3]],[[["u64",15]],["decimal",3]],[[["i64",15]],["decimal",3]],[[["isize",15]],["decimal",3]],[[["usize",15]],["decimal",3]],[[["u8",15]],["decimal",3]],[[],["decimal",3]],[[["decimal",3]],["decimal",3]],[[],["decimal",3]],[[],["bool",15]],[[],["bool",15]],[[],["decimal",3]],[[["formatter",3]],[["result",4],["error",3]]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],[["ordering",4],["option",4]]],[[],[["decimal",3],["result",4]]],[[["decimal",3]]],[[["decimal",3]]],[[["f64",15]],[["result",4],["decimal",3],["error",3]]],[[["f32",15]],[["result",4],["decimal",3],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["i32",15]],[["option",4],["decimal",3]]],[[["i64",15]],[["option",4],["decimal",3]]],[[["u32",15]],[["option",4],["decimal",3]]],[[["u64",15]],[["option",4],["decimal",3]]],[[["f32",15]],[["option",4],["decimal",3]]],[[["f64",15]],[["option",4],["decimal",3]]],[[]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["ordering",4]],[[],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["str",15]],[["datetime",3],["parseerror",3],["result",4]]],[[["str",15]],[["parseerror",3],["naivetime",3],["result",4]]],[[["str",15]],[["result",4],["naivedate",3],["parseerror",3]]],[[["str",15]],[["parseerror",3],["datetime",3],["result",4]]],[[["str",15]],[["datetime",3],["result",4],["parseerror",3]]],[[["str",15]],[["result",4],["naivedatetime",3],["parseerror",3]]],[[["duration",3]]],[[["duration",3]]],[[["duration",3]]],[[],["datetime",3]],[[],["naivetime",3]],[[],["naivedatetime",3]],[[],["naivedate",3]],[[],["utc",3]],[[],["fixedoffset",3]],[[["fixedoffset",3]],["datetime",3]],[[["duration",3]],["naivedate",3]],[[["duration",3]],["datetime",3]],[[["fixedoffset",3]],["naivetime",3]],[[["duration",3]],["naivedatetime",3]],[[["fixedoffset",3]],["naivedatetime",3]],[[["duration",3]],["naivetime",3]],[[["naivedatetime",3]],["duration",3]],[[["duration",3]],["datetime",3]],[[["duration",3]],["naivedate",3]],[[["datetime",3]],["duration",3]],[[["fixedoffset",3]],["datetime",3]],[[["naivedate",3]],["duration",3]],[[["naivetime",3]],["duration",3]],[[["duration",3]],["naivetime",3]],[[["duration",3]],["naivedatetime",3]],[[["fixedoffset",3]],["naivedatetime",3]],[[["fixedoffset",3]],["naivetime",3]],[[["utc",3]],["utc",3]],[[["naivedate",3]],[["localresult",4],["utc",3]]],[[["naivedatetime",3]],[["localresult",4],["utc",3]]],[[["naivedate",3]],["utc",3]],[[["naivedatetime",3]],["utc",3]],[[["fixedoffset",3]],["fixedoffset",3]],[[["naivedate",3]],[["fixedoffset",3],["localresult",4]]],[[["naivedatetime",3]],[["fixedoffset",3],["localresult",4]]],[[["naivedate",3]],["fixedoffset",3]],[[["naivedatetime",3]],["fixedoffset",3]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["weekday",4]],[[],["isoweek",3]],[[["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[["u32",15]],[["option",4],["naivedate",3]]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["weekday",4]],[[],["isoweek",3]],[[["i32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[],["i32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["weekday",4]],[[],["isoweek",3]],[[["i32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["duration",3]]],[[["duration",3]]],[[["duration",3]]],[[["fixedoffset",3]],["bool",15]],[[["fixedoffset",3]],["bool",15]],[[["naivetime",3]],["bool",15]],[[["naivetime",3]],["bool",15]],[[["naivedate",3]],["bool",15]],[[["naivedate",3]],["bool",15]],[[["datetime",3]],["bool",15]],[[["utc",3]],["bool",15]],[[["naivedatetime",3]],["bool",15]],[[["naivedatetime",3]],["bool",15]],[[["systemtime",3]],[["datetime",3],["utc",3]]],[[["datetime",3],["utc",3]],[["datetime",3],["local",3]]],[[["systemtime",3]],[["datetime",3],["local",3]]],[[["datetime",3],["local",3]],[["datetime",3],["utc",3]]],[[["datetime",3],["utc",3]],[["datetime",3],["fixedoffset",3]]],[[["datetime",3],["fixedoffset",3]],[["datetime",3],["utc",3]]],[[["datetime",3],["local",3]],[["datetime",3],["fixedoffset",3]]],[[["datetime",3],["fixedoffset",3]],[["datetime",3],["local",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["duration",3]],[["result",4],["datetime",3]]],[[["duration",3]],[["result",4],["datetime",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],[["option",4],["naivetime",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[["u32",15]],[["option",4],["datetime",3]]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[],["fixedoffset",3]],[[],["fixedoffset",3]],[[["naivedate",3]],[["ordering",4],["option",4]]],[[["naivetime",3]],[["ordering",4],["option",4]]],[[["datetime",3]],[["ordering",4],["option",4]]],[[["naivedatetime",3]],[["ordering",4],["option",4]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],[["result",4],["error",3]]],[[]],[[]],[[]],[[]],[[]],[[["datetime",3]],["ordering",4]],[[["naivedatetime",3]],["ordering",4]],[[["naivetime",3]],["ordering",4]],[[["naivedate",3]],["ordering",4]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[["columndata",4]],[["option",4],["result",6]]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["columndata",4]],[[],["str",15]],[[["error",3]]],[[["error",3]]],[[["infallible",4]]],[[["error",3]],["error",4]],[[["parseinterror",3]],["error",4]],[[["utf8error",3]],["error",4]],[[["fromutf8error",3]],["error",4]],[[["fromutf16error",3]],["error",4]],[[["error",3]],["error",4]],[[["error",3]],["error",4]],[[]],[[]],[[],["authmethod",4]],[[],["config",3]],[[],["error",4]],[[],["columntype",4]],[[],["columndata",4]],[[],["tokenerror",3]],[[],["numeric",3]],[[],["datetime",3]],[[],["smalldatetime",3]],[[],["date",3]],[[],["time",3]],[[],["datetime2",3]],[[],["datetimeoffset",3]],[[],["xmlschema",3]],[[],["xmldata",3]],[[],["encryptionlevel",4]],[[]],[[["authmethod",4]],["bool",15]],[[["authmethod",4]],["bool",15]],[[],["bool",15]],[[["datetime",3]],["bool",15]],[[["datetime",3]],["bool",15]],[[["smalldatetime",3]],["bool",15]],[[["smalldatetime",3]],["bool",15]],[[["date",3]],["bool",15]],[[["date",3]],["bool",15]],[[["time",3]],["bool",15]],[[["datetime2",3]],["bool",15]],[[["datetime2",3]],["bool",15]],[[["datetimeoffset",3]],["bool",15]],[[["datetimeoffset",3]],["bool",15]],[[["xmlschema",3]],["bool",15]],[[["xmlschema",3]],["bool",15]],[[["xmldata",3]],["bool",15]],[[["xmldata",3]],["bool",15]],[[["encryptionlevel",4]],["bool",15]],[[],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],[["result",4],["error",3]]],[[["u8",15]],[["encryptionlevel",4],["result",4]]],[[["u32",15]],[["encryptionlevel",4],["result",4]]],[[["pin",3],["context",3]],[["option",4],["poll",4]]],[[]],[[]],[[]],[[]],[[["u16",15]]],[[]],[[]],[[["encryptionlevel",4]]],[[]],[[["authmethod",4]]],[[],["string",3]],[[["str",15]],["result",6]],[[["str",15]],["result",6]],[[["config",3]]],[[]],[[]],[[]],[[],["option",4]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[],["u64",15]],[[],["str",15]],[[],["columntype",4]],[[]],[[],["usize",15]],[[],["option",4]],[[],[["result",6],["option",4]]],[[["bigint",3],["i64",15]],["bigdecimal",3]],[[["u32",15]],[["bigdecimal",3],["option",4]]],[[["i64",15]],["bigdecimal",3]],[[["u64",15]],["bigdecimal",3]],[[],["sign",4]],[[]],[[]],[[],["u64",15]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[],[["bigdecimal",3],["option",4]]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[["i64",15]],["bigdecimal",3]],[[],["bool",15]],[[],["bigdecimal",3]],[[],["bigdecimal",3]],[[["u32",15],["global",3],["vec",3],["sign",4]],["bigint",3]],[[["biguint",3],["sign",4]],["bigint",3]],[[["sign",4]],["bigint",3]],[[["sign",4]]],[[["sign",4]],["bigint",3]],[[["sign",4]],["bigint",3]],[[],["bigint",3]],[[],["bigint",3]],[[["u32",15]],[["bigint",3],["option",4]]],[[["u32",15],["sign",4]],[["bigint",3],["option",4]]],[[["u32",15],["sign",4]],[["bigint",3],["option",4]]],[[]],[[]],[[]],[[]],[[],["u32digits",3]],[[],["u64digits",3]],[[],[["global",3],["vec",3],["u8",15]]],[[],[["global",3],["vec",3],["u8",15]]],[[["u32",15]],["string",3]],[[["u32",15]]],[[["u32",15]]],[[],["sign",4]],[[],["biguint",3]],[[]],[[],["u64",15]],[[],[["biguint",3],["option",4]]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["bigint",3]],[["bigint",3],["option",4]]],[[["u32",15]],["bigint",3]],[[["bigint",3]],["bigint",3]],[[],["bigint",3]],[[],["bigint",3]],[[["u32",15]],["bigint",3]],[[],[["option",4],["u64",15]]],[[["u64",15]],["bool",15]],[[["bool",15],["u64",15]]],[[["i64",15],["u32",15]],["decimal",3]],[[["u32",15],["i128",15]],["decimal",3]],[[["u32",15],["bool",15]],["decimal",3]],[[["str",15]],[["result",4],["decimal",3],["error",3]]],[[],["u32",15]],[[["bool",15]]],[[["bool",15]]],[[["bool",15]]],[[["u32",15]],[["error",3],["result",4]]],[[["u32",15]]],[[]],[[],["decimal",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["decimal",3]],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[["u32",15],["roundingstrategy",4]],["decimal",3]],[[["u32",15]],["decimal",3]],[[],["unpackeddecimal",3]],[[["decimal",3]],[["option",4],["decimal",3]]],[[["decimal",3]],[["option",4],["decimal",3]]],[[["decimal",3]],[["option",4],["decimal",3]]],[[["decimal",3]],[["option",4],["decimal",3]]],[[["decimal",3]],[["option",4],["decimal",3]]],[[],["decimal",3]],[[["decimal",3]],["decimal",3]],[[["u64",15]],["decimal",3]],[[],[["option",4],["decimal",3]]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[],["decimal",3]],[[["u32",15],["str",15]],[["result",4],["decimal",3],["error",3]]],[[["i128",15],["u8",15]]],[[],["i128",15]],[[],["i128",15]],[[],["u8",15]],[[],["i128",15]],[[],["u8",15]],[[["i32",15]],["fixedoffset",3]],[[["i32",15]],[["option",4],["fixedoffset",3]]],[[["i32",15]],["fixedoffset",3]],[[["i32",15]],[["option",4],["fixedoffset",3]]],[[],["i32",15]],[[],["i32",15]],[[],[["date",3],["utc",3]]],[[],[["datetime",3],["utc",3]]],[[["naivedatetime",3]],["datetime",3]],[[],["date",3]],[[],["naivetime",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[]],[[],["datetime",3]],[[["duration",3]],[["option",4],["datetime",3]]],[[["duration",3]],[["option",4],["datetime",3]]],[[["datetime",3]],["duration",3]],[[],["naivedatetime",3]],[[],["naivedatetime",3]],[[["str",15]],[["datetime",3],["result",4],["parseerror",3]]],[[["str",15]],[["datetime",3],["result",4],["parseerror",3]]],[[["str",15]],[["datetime",3],["result",4],["parseerror",3]]],[[],["string",3]],[[],["string",3]],[[["bool",15],["secondsformat",4]],["string",3]],[[],["delayedformat",3]],[[["str",15]],[["strftimeitems",3],["delayedformat",3]]],[[["u32",15],["i32",15]],["naivedate",3]],[[["u32",15],["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15],["i32",15]],["naivedate",3]],[[["u32",15],["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15],["weekday",4],["i32",15]],["naivedate",3]],[[["u32",15],["weekday",4],["i32",15]],[["option",4],["naivedate",3]]],[[["i32",15]],["naivedate",3]],[[["i32",15]],[["option",4],["naivedate",3]]],[[["u32",15],["i32",15],["u8",15],["weekday",4]],["naivedate",3]],[[["u32",15],["i32",15],["u8",15],["weekday",4]],[["option",4],["naivedate",3]]],[[["str",15]],[["result",4],["naivedate",3],["parseerror",3]]],[[["naivetime",3]],["naivedatetime",3]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[["u32",15]],["naivedatetime",3]],[[["u32",15]],[["naivedatetime",3],["option",4]]],[[],["naivedate",3]],[[],[["option",4],["naivedate",3]]],[[],["naivedate",3]],[[],[["option",4],["naivedate",3]]],[[["duration",3]],[["option",4],["naivedate",3]]],[[["duration",3]],[["option",4],["naivedate",3]]],[[["naivedate",3]],["duration",3]],[[],["delayedformat",3]],[[["str",15]],[["strftimeitems",3],["delayedformat",3]]],[[],["naivedatedaysiterator",3]],[[],["naivedateweeksiterator",3]],[[["naivedate",3],["naivetime",3]],["naivedatetime",3]],[[["i64",15],["u32",15]],["naivedatetime",3]],[[["i64",15],["u32",15]],[["naivedatetime",3],["option",4]]],[[["str",15]],[["result",4],["naivedatetime",3],["parseerror",3]]],[[],["naivedate",3]],[[],["naivetime",3]],[[],["i64",15]],[[],["i64",15]],[[],["i64",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[["duration",3]],[["naivedatetime",3],["option",4]]],[[["duration",3]],[["naivedatetime",3],["option",4]]],[[["naivedatetime",3]],["duration",3]],[[],["delayedformat",3]],[[["str",15]],[["strftimeitems",3],["delayedformat",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["u32",15]],["naivetime",3]],[[["u32",15]],[["option",4],["naivetime",3]]],[[["str",15]],[["parseerror",3],["naivetime",3],["result",4]]],[[["duration",3]]],[[["duration",3]]],[[["naivetime",3]],["duration",3]],[[],["delayedformat",3]],[[["str",15]],[["strftimeitems",3],["delayedformat",3]]],[[["u32",15],["i32",15]]],[[],["i32",15]],[[],["u32",15]],[[["u16",15]]],[[],["u16",15]],[[],["u16",15]],[[["u32",15]],["date",3]],[[],["u32",15]],[[["u8",15],["u64",15]]],[[],["u64",15]],[[],["u8",15]],[[["time",3],["date",3]]],[[],["date",3]],[[],["time",3]],[[["i16",15],["datetime2",3]]],[[],["datetime2",3]],[[],["i16",15]],[[],["str",15]],[[],["str",15]],[[],["str",15]],[[]],[[],[["xmlschema",3],["option",4]]],[[],["string",3]],[[],["uuid",3]],[[["u32",15],["u16",15]],[["result",4],["uuid",3],["error",3]]],[[["u32",15],["u16",15]],[["result",4],["uuid",3],["error",3]]],[[["u128",15]],["uuid",3]],[[["u128",15]],["uuid",3]],[[],[["result",4],["uuid",3],["error",3]]],[[],["uuid",3]],[[["str",15]],[["result",4],["uuid",3],["error",3]]],[[],["hyphenated",3]],[[],["hyphenatedref",3]],[[],["simple",3]],[[],["simpleref",3]],[[],["urn",3]],[[],["urnref",3]],[[["timestamp",3]],[["result",4],["uuid",3],["error",3]]],[[],[["option",4],["timestamp",3]]],[[["uuid",3]],["uuid",3]],[[],["uuid",3]],null,null,null,null,[[],[["variant",4],["option",4]]],[[],["usize",15]],[[],[["option",4],["version",4]]],[[]],[[]],[[],["u128",15]],[[],["u128",15]],[[]],[[],["bool",15]],[[]]],"p":[[4,"IoErrorKind"],[4,"Error"],[13,"Io"],[13,"Routing"],[3,"TokenError"],[4,"Sign"],[4,"AuthMethod"],[8,"FromSql"],[8,"FromSqlOwned"],[4,"ColumnType"],[8,"SqlBrowser"],[4,"ColumnData"],[4,"EncryptionLevel"],[8,"IntoSql"],[8,"ToSql"],[3,"Config"],[3,"Client"],[3,"QueryResult"],[3,"ExecuteResult"],[3,"Column"],[3,"Row"],[3,"BigDecimal"],[3,"BigInt"],[3,"Decimal"],[3,"Numeric"],[3,"FixedOffset"],[3,"Utc"],[3,"DateTime"],[3,"NaiveDate"],[3,"NaiveDateTime"],[3,"NaiveTime"],[3,"DateTime"],[3,"SmallDateTime"],[3,"Date"],[3,"Time"],[3,"DateTime2"],[3,"DateTimeOffset"],[3,"XmlSchema"],[3,"XmlData"],[3,"Uuid"]]}\
}');
initSearch(searchIndex);