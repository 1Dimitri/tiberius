var searchIndex = JSON.parse('{\
"tiberius":{"doc":"An asynchronous, runtime-independent, pure-rust Tabular…","i":[[3,"Uuid","tiberius","A Universally Unique Identifier (UUID).",null,null],[3,"Client","","`Client` is the main entry point to the SQL Server,…",null,null],[3,"Config","","The `Config` struct contains all configuration information…",null,null],[3,"QueryResult","","A set of `Streams` of [`Rows`] resulting from a `SELECT`…",null,null],[3,"ExecuteResult","","A result from a query execution, listing the number of…",null,null],[3,"Column","","A column of data from a query.",null,null],[3,"Row","","A row of data from a query.",null,null],[4,"AuthMethod","","Defines the method of authentication to the server.",null,null],[13,"SqlServer","","Authenticate directly with SQL Server. The only…",0,null],[13,"Windows","","Authenticate with Windows credentials. Only available on…",0,null],[13,"WindowsIntegrated","","Authenticate as the currently logged in user. Only…",0,null],[4,"ColumnType","","The type of the column.",null,null],[13,"Null","","The column doesn\'t have a specified type.",1,null],[13,"Bit","","A bit or boolean value.",1,null],[13,"Int1","","An 8-bit integer value.",1,null],[13,"Int2","","A 16-bit integer value.",1,null],[13,"Int4","","A 32-bit integer value.",1,null],[13,"Int8","","A 64-bit integer value.",1,null],[13,"Datetime4","","A 32-bit datetime value.",1,null],[13,"Float4","","A 32-bit floating point value.",1,null],[13,"Float8","","A 64-bit floating point value.",1,null],[13,"Money","","Money value.",1,null],[13,"Datetime","","A TDS 7.2 datetime value.",1,null],[13,"Money4","","A 32-bit money value.",1,null],[13,"Guid","","A unique identifier, UUID.",1,null],[13,"Intn","","N-bit integer value (variable).",1,null],[13,"Bitn","","A bit value in a variable-length type.",1,null],[13,"Decimaln","","A decimal value (same as `Numericn`).",1,null],[13,"Numericn","","A numeric value (same as `Decimaln`).",1,null],[13,"Floatn","","A n-bit floating point value.",1,null],[13,"Datetimen","","A n-bit datetime value (TDS 7.2).",1,null],[13,"Daten","","A n-bit date value (TDS 7.3).",1,null],[13,"Timen","","A n-bit time value (TDS 7.3).",1,null],[13,"Datetime2","","A n-bit datetime2 value (TDS 7.3).",1,null],[13,"DatetimeOffsetn","","A n-bit datetime value with an offset (TDS 7.3).",1,null],[13,"BigVarBin","","A variable binary value.",1,null],[13,"BigVarChar","","A large variable string value.",1,null],[13,"BigBinary","","A binary value.",1,null],[13,"BigChar","","A string value.",1,null],[13,"NVarchar","","A variable string value with UTF-16 encoding.",1,null],[13,"NChar","","A string value with UTF-16 encoding.",1,null],[13,"Xml","","A XML value.",1,null],[13,"Udt","","User-defined type.",1,null],[13,"Text","","A text value (deprecated).",1,null],[13,"Image","","A image value (deprecated).",1,null],[13,"NText","","A text value with UTF-16 encoding (deprecated).",1,null],[13,"SSVariant","","An SQL variant type.",1,null],[4,"ColumnData","","A container of a value that can be represented as a TDS…",null,null],[13,"U8","","8-bit integer, unsigned.",2,null],[13,"I16","","16-bit integer, signed.",2,null],[13,"I32","","32-bit integer, signed.",2,null],[13,"I64","","64-bit integer, signed.",2,null],[13,"F32","","32-bit floating point number.",2,null],[13,"F64","","64-bit floating point number.",2,null],[13,"Bit","","Boolean.",2,null],[13,"String","","A string value.",2,null],[13,"Guid","","A Guid (UUID) value.",2,null],[13,"Binary","","Binary data.",2,null],[13,"Numeric","","Numeric value (a decimal).",2,null],[13,"Xml","","XML data.",2,null],[13,"DateTime","","DateTime value.",2,null],[13,"SmallDateTime","","A small DateTime value.",2,null],[13,"Time","","Time value.",2,null],[13,"Date","","Date value.",2,null],[13,"DateTime2","","DateTime2 value.",2,null],[13,"DateTimeOffset","","DateTime2 value with an offset.",2,null],[4,"EncryptionLevel","","The configured encryption level specifying if encryption…",null,null],[13,"Off","","Only use encryption for the login procedure",3,null],[13,"On","","Encrypt everything if possible",3,null],[13,"NotSupported","","Do not encrypt anything",3,null],[13,"Required","","Encrypt everything and fail if not possible",3,null],[11,"sql_server","","Construct a new SQL Server authentication configuration.",0,[[]]],[11,"windows","","Construct a new Windows authentication configuration. Only…",0,[[]]],[11,"new","","Create a new `Config` with the default settings.",4,[[]]],[11,"host","","A host or ip address to connect to.",4,[[]]],[11,"port","","The server port.",4,[[]]],[11,"database","","The database to connect to.",4,[[]]],[11,"instance_name","","The instance name as defined in the SQL Browser. Only…",4,[[]]],[11,"encryption","","Set the preferred encryption level.",4,[[["encryptionlevel",4]]]],[11,"trust_cert","","If set, the server certificate will not be validated and…",4,[[]]],[11,"authentication","","Sets the authentication method.",4,[[["authmethod",4]]]],[11,"get_addr","","Get the host address including port",4,[[],["string",3]]],[11,"from_ado_string","","Creates a new `Config` from an ADO.NET connection string.",4,[[],["result",6]]],[11,"connect","","Uses an instance of [`Config`] to specify the connection…",5,[[["config",3]]]],[11,"execute","","Executes SQL statements in the SQL Server, returning the…",5,[[]]],[11,"query","","Executes SQL statements in the SQL Server, returning…",5,[[]]],[11,"simple_query","","Execute multiple queries, delimited with `;` and return…",5,[[]]],[0,"error","","Error module",null,null],[4,"IoErrorKind","tiberius::error","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",6,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",6,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",6,null],[13,"ConnectionReset","","The connection was reset by the remote server.",6,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",6,null],[13,"NotConnected","","The network operation failed because it was not connected…",6,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",6,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",6,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",6,null],[13,"AlreadyExists","","An entity already exists, often a file.",6,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",6,null],[13,"InvalidInput","","A parameter was incorrect.",6,null],[13,"InvalidData","","Data not valid for the operation were encountered.",6,null],[13,"TimedOut","","The I/O operation\'s timeout expired, causing it to be…",6,null],[13,"WriteZero","","An error returned when an operation could not be completed…",6,null],[13,"Interrupted","","This operation was interrupted.",6,null],[13,"Other","","Any I/O error not part of this list.",6,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",6,null],[3,"TokenError","","An error token returned from the server.",null,null],[4,"Error","","A unified error enum that contains several errors that…",null,null],[13,"Io","","An error occured when performing I/O to the server.",7,null],[12,"kind","tiberius::error::Error","A list specifying general categories of I/O error.",8,null],[12,"message","","The error description.",8,null],[13,"Protocol","tiberius::error","An error happened during the request or response parsing.",7,null],[13,"Encoding","","Server responded with encoding not supported.",7,null],[13,"Conversion","","Conversion failure from one type to another.",7,null],[13,"Utf8","","Tried to convert data to UTF-8 that was not valid.",7,null],[13,"Utf16","","Tried to convert data to UTF-16 that was not valid.",7,null],[13,"ParseInt","","Tried to parse an integer that was not an integer.",7,null],[13,"Server","","An error returned by the server.",7,null],[13,"Tls","","An error in the TLS handshake.",7,null],[11,"columns","tiberius","Names of the columns of the current resultset. Order is…",9,[[],["option",4]]],[11,"next_resultset","","Returns `true` if stream has more result sets available.…",9,[[]]],[11,"into_results","","Collects results from all queries in the stream into…",9,[[]]],[11,"into_first_result","","Collects the output of the first query, dropping any…",9,[[]]],[11,"into_row","","Collects the first row from the output of the first query,…",9,[[]]],[11,"rows_affected","","A slice of numbers of rows affected in the same order as…",10,[[]]],[11,"total","","Aggregates all resulting row counts into a sum.",10,[[]]],[11,"name","","The name of the column.",11,[[]]],[11,"column_type","","The type of the column.",11,[[],["columntype",4]]],[11,"columns","","Columns defining the row data. Columns listed here are in…",12,[[]]],[11,"len","","Returns the number of columns in the row.",12,[[]]],[11,"get","","Retrieve a column value for a given column index, which…",12,[[],["option",4]]],[11,"try_get","","Retrieve a column\'s value for a given column index.",12,[[],[["result",6],["option",4]]]],[11,"code","tiberius::error","The error code, see descriptions from [the manual].",13,[[]]],[11,"state","","The error state, used as a modifier to the error number.",13,[[]]],[11,"class","","The class (severity) of the error. A class of less than 10…",13,[[]]],[11,"message","","The error message returned from the server.",13,[[]]],[11,"server","","The server name.",13,[[]]],[11,"procedure","","The name of the stored procedure causing the error.",13,[[]]],[11,"line","","The line number in the SQL batch or stored procedure that…",13,[[]]],[0,"numeric","tiberius","Representations of numeric types.",null,null],[3,"Decimal","tiberius::numeric","`Decimal` represents a 128 bit representation of a…",null,null],[3,"Numeric","","Represent a sql Decimal / Numeric type. It is stored in a…",null,null],[0,"time","tiberius","Date and time handling.",null,null],[3,"DateTime","tiberius::time","A presentation of `datetime` type in the server.",null,null],[3,"SmallDateTime","","A presentation of `smalldatetime` type in the server.",null,null],[3,"Date","","A presentation of `date` type in the server.",null,null],[3,"Time","","A presentation of `time` type in the server.",null,null],[3,"DateTime2","","A presentation of `datetime2` type in the server.",null,null],[3,"DateTimeOffset","","A presentation of `datetimeoffset` type in the server.",null,null],[0,"chrono","","Mappings between TDS and and Chrono types (with `chrono`…",null,null],[3,"FixedOffset","tiberius::time::chrono","The time zone with fixed offset, from UTC-23:59:59 to…",null,null],[3,"Utc","","The UTC time zone. This is the most efficient time zone…",null,null],[3,"DateTime","","ISO 8601 combined date and time with time zone.",null,null],[3,"NaiveDate","","ISO 8601 calendar date without timezone. Allows for every…",null,null],[3,"NaiveDateTime","","ISO 8601 combined date and time without timezone.",null,null],[3,"NaiveTime","","ISO 8601 time without timezone. Allows for the nanosecond…",null,null],[0,"xml","tiberius","The XML containers",null,null],[3,"XmlSchema","tiberius::xml","Provides information of the location for the schema.",null,null],[3,"XmlData","","A representation of XML data in TDS. Holds the data as a…",null,null],[6,"Result","tiberius","An alias for a result that holds crate\'s error type as the…",null,null],[8,"FromSql","","A conversion trait from a TDS type by-reference.",null,null],[10,"from_sql","","Returns the value, `None` being a null value, copying the…",14,[[["columndata",4]],[["result",6],["option",4]]]],[8,"FromSqlOwned","","A conversion trait from a TDS type by-value.",null,null],[10,"from_sql_owned","","Returns the value, `None` being a null value, taking the…",15,[[["columndata",4]],[["result",6],["option",4]]]],[8,"SqlBrowser","","An extension trait to a `TcpStream` to find a port and…",null,null],[10,"connect_named","","If the given builder defines a named instance, finds the…",16,[[["config",3]],[["box",3],["pin",3]]]],[8,"IntoSql","","A by-value conversion trait to a TDS type.",null,null],[10,"into_sql","","Convert to a value understood by the SQL Server.…",17,[[],["columndata",4]]],[8,"ToSql","","A conversion trait to a TDS type.",null,null],[10,"to_sql","","Convert to a value understood by the SQL Server.…",18,[[],["columndata",4]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"vzip","","",19,[[]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"vzip","","",5,[[]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"vzip","","",4,[[]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"try_poll_next","","",9,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"vzip","","",9,[[]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"vzip","","",10,[[]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"vzip","","",11,[[]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"vzip","","",12,[[]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"vzip","","",0,[[]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"vzip","","",1,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"vzip","","",2,[[]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"vzip","","",3,[[]]],[11,"from","tiberius::error","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"vzip","","",6,[[]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"vzip","","",13,[[]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"vzip","","",7,[[]]],[11,"from","tiberius::numeric","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"vzip","","",20,[[]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"vzip","","",21,[[]]],[11,"from","tiberius::time","",22,[[]]],[11,"into","","",22,[[]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"vzip","","",22,[[]]],[11,"from","","",23,[[]]],[11,"into","","",23,[[]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"vzip","","",23,[[]]],[11,"from","","",24,[[]]],[11,"into","","",24,[[]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"vzip","","",24,[[]]],[11,"from","","",25,[[]]],[11,"into","","",25,[[]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"vzip","","",25,[[]]],[11,"from","","",26,[[]]],[11,"into","","",26,[[]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"vzip","","",26,[[]]],[11,"from","","",27,[[]]],[11,"into","","",27,[[]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"vzip","","",27,[[]]],[11,"from","tiberius::time::chrono","",28,[[]]],[11,"into","","",28,[[]]],[11,"to_owned","","",28,[[]]],[11,"clone_into","","",28,[[]]],[11,"to_string","","",28,[[],["string",3]]],[11,"try_from","","",28,[[],["result",4]]],[11,"try_into","","",28,[[],["result",4]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"vzip","","",28,[[]]],[11,"from","","",29,[[]]],[11,"into","","",29,[[]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"to_string","","",29,[[],["string",3]]],[11,"try_from","","",29,[[],["result",4]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"vzip","","",29,[[]]],[11,"from","","",30,[[]]],[11,"into","","",30,[[]]],[11,"to_owned","","",30,[[]]],[11,"clone_into","","",30,[[]]],[11,"to_string","","",30,[[],["string",3]]],[11,"try_from","","",30,[[],["result",4]]],[11,"try_into","","",30,[[],["result",4]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"vzip","","",30,[[]]],[11,"round_subsecs","","",30,[[]]],[11,"trunc_subsecs","","",30,[[]]],[11,"from","","",31,[[]]],[11,"into","","",31,[[]]],[11,"to_owned","","",31,[[]]],[11,"clone_into","","",31,[[]]],[11,"to_string","","",31,[[],["string",3]]],[11,"try_from","","",31,[[],["result",4]]],[11,"try_into","","",31,[[],["result",4]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"vzip","","",31,[[]]],[11,"from","","",32,[[]]],[11,"into","","",32,[[]]],[11,"to_owned","","",32,[[]]],[11,"clone_into","","",32,[[]]],[11,"to_string","","",32,[[],["string",3]]],[11,"try_from","","",32,[[],["result",4]]],[11,"try_into","","",32,[[],["result",4]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"vzip","","",32,[[]]],[11,"round_subsecs","","",32,[[]]],[11,"trunc_subsecs","","",32,[[]]],[11,"from","","",33,[[]]],[11,"into","","",33,[[]]],[11,"to_owned","","",33,[[]]],[11,"clone_into","","",33,[[]]],[11,"to_string","","",33,[[],["string",3]]],[11,"try_from","","",33,[[],["result",4]]],[11,"try_into","","",33,[[],["result",4]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"vzip","","",33,[[]]],[11,"round_subsecs","","",33,[[]]],[11,"trunc_subsecs","","",33,[[]]],[11,"from","tiberius::xml","",34,[[]]],[11,"into","","",34,[[]]],[11,"to_owned","","",34,[[]]],[11,"clone_into","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"try_into","","",34,[[],["result",4]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"vzip","","",34,[[]]],[11,"from","","",35,[[]]],[11,"into","","",35,[[]]],[11,"to_owned","","",35,[[]]],[11,"clone_into","","",35,[[]]],[11,"to_string","","",35,[[],["string",3]]],[11,"try_from","","",35,[[],["result",4]]],[11,"try_into","","",35,[[],["result",4]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"vzip","","",35,[[]]],[11,"clone","tiberius::error","",6,[[],["errorkind",4]]],[11,"cmp","","",6,[[["errorkind",4]],["ordering",4]]],[11,"eq","","",6,[[["errorkind",4]]]],[11,"hash","","",6,[[]]],[11,"fmt","","",6,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",6,[[["errorkind",4]],[["option",4],["ordering",4]]]],[11,"clone","tiberius","",19,[[],["uuid",3]]],[11,"from_str","","",19,[[],[["result",4],["uuid",3]]]],[11,"hash","","",19,[[]]],[11,"cmp","","",19,[[["uuid",3]],["ordering",4]]],[11,"eq","","",19,[[["uuid",3]]]],[11,"ne","","",19,[[["uuid",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"partial_cmp","","",19,[[["uuid",3]],[["option",4],["ordering",4]]]],[11,"lt","","",19,[[["uuid",3]]]],[11,"le","","",19,[[["uuid",3]]]],[11,"gt","","",19,[[["uuid",3]]]],[11,"ge","","",19,[[["uuid",3]]]],[11,"default","","",19,[[],["uuid",3]]],[11,"fmt","","",19,[[["formatter",3]],[["result",4],["error",3]]]],[11,"one","tiberius::numeric","",20,[[],["decimal",3]]],[11,"eq","","",20,[[["decimal",3]]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",20,[[["decimal",3]],["ordering",4]]],[11,"div","","",20,[[["decimal",3]],["decimal",3]]],[11,"div","","",20,[[["decimal",3]],["decimal",3]]],[11,"mul","","",20,[[["decimal",3]],["decimal",3]]],[11,"mul","","",20,[[["decimal",3]],["decimal",3]]],[11,"deserialize","","",20,[[],[["decimal",3],["result",4]]]],[11,"neg","","",20,[[],["decimal",3]]],[11,"default","","",20,[[],["decimal",3]]],[11,"fmt","","",20,[[["formatter",3]],[["result",4],["error",3]]]],[11,"zero","","",20,[[],["decimal",3]]],[11,"is_zero","","",20,[[]]],[11,"clone","","",20,[[],["decimal",3]]],[11,"serialize","","",20,[[],["result",4]]],[11,"sub_assign","","",20,[[["decimal",3]]]],[11,"sub_assign","","",20,[[["decimal",3]]]],[11,"from_str","","",20,[[],[["decimal",3],["result",4]]]],[11,"from_str_radix","","",20,[[],[["result",4],["decimal",3]]]],[11,"from_i32","","",20,[[],[["option",4],["decimal",3]]]],[11,"from_i64","","",20,[[],[["option",4],["decimal",3]]]],[11,"from_u32","","",20,[[],[["option",4],["decimal",3]]]],[11,"from_u64","","",20,[[],[["option",4],["decimal",3]]]],[11,"from_f32","","",20,[[],[["option",4],["decimal",3]]]],[11,"from_f64","","",20,[[],[["option",4],["decimal",3]]]],[11,"partial_cmp","","",20,[[["decimal",3]],[["option",4],["ordering",4]]]],[11,"rem","","",20,[[["decimal",3]],["decimal",3]]],[11,"rem","","",20,[[["decimal",3]],["decimal",3]]],[11,"rem_assign","","",20,[[["decimal",3]]]],[11,"rem_assign","","",20,[[["decimal",3]]]],[11,"hash","","",20,[[]]],[11,"to_i64","","",20,[[],["option",4]]],[11,"to_u64","","",20,[[],["option",4]]],[11,"to_f64","","",20,[[],["option",4]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"from","","",20,[[],["decimal",3]]],[11,"sum","","",20,[[],["decimal",3]]],[11,"add","","",20,[[["decimal",3]],["decimal",3]]],[11,"add","","",20,[[["decimal",3]],["decimal",3]]],[11,"sub","","",20,[[["decimal",3]],["decimal",3]]],[11,"sub","","",20,[[["decimal",3]],["decimal",3]]],[11,"add_assign","","",20,[[["decimal",3]]]],[11,"add_assign","","",20,[[["decimal",3]]]],[11,"div_assign","","",20,[[["decimal",3]]]],[11,"div_assign","","",20,[[["decimal",3]]]],[11,"abs","","",20,[[],["decimal",3]]],[11,"abs_sub","","",20,[[["decimal",3]],["decimal",3]]],[11,"signum","","",20,[[],["decimal",3]]],[11,"is_positive","","",20,[[]]],[11,"is_negative","","",20,[[]]],[11,"mul_assign","","",20,[[["decimal",3]]]],[11,"mul_assign","","",20,[[["decimal",3]]]],[11,"fix","tiberius::time::chrono","",28,[[],["fixedoffset",3]]],[11,"fix","","",29,[[],["fixedoffset",3]]],[11,"duration_round","","",30,[[["duration",3]],[["datetime",3],["result",4]]]],[11,"duration_trunc","","",30,[[["duration",3]],[["datetime",3],["result",4]]]],[11,"partial_cmp","","",33,[[["naivetime",3]],[["option",4],["ordering",4]]]],[11,"lt","","",33,[[["naivetime",3]]]],[11,"le","","",33,[[["naivetime",3]]]],[11,"gt","","",33,[[["naivetime",3]]]],[11,"ge","","",33,[[["naivetime",3]]]],[11,"partial_cmp","","",32,[[["naivedatetime",3]],[["option",4],["ordering",4]]]],[11,"lt","","",32,[[["naivedatetime",3]]]],[11,"le","","",32,[[["naivedatetime",3]]]],[11,"gt","","",32,[[["naivedatetime",3]]]],[11,"ge","","",32,[[["naivedatetime",3]]]],[11,"partial_cmp","","Compare two DateTimes based on their true time, ignoring…",30,[[["datetime",3]],[["option",4],["ordering",4]]]],[11,"partial_cmp","","",31,[[["naivedate",3]],[["option",4],["ordering",4]]]],[11,"lt","","",31,[[["naivedate",3]]]],[11,"le","","",31,[[["naivedate",3]]]],[11,"gt","","",31,[[["naivedate",3]]]],[11,"ge","","",31,[[["naivedate",3]]]],[11,"year","","",30,[[]]],[11,"month","","",30,[[]]],[11,"month0","","",30,[[]]],[11,"day","","",30,[[]]],[11,"day0","","",30,[[]]],[11,"ordinal","","",30,[[]]],[11,"ordinal0","","",30,[[]]],[11,"weekday","","",30,[[],["weekday",4]]],[11,"iso_week","","",30,[[],["isoweek",3]]],[11,"with_year","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_month","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_month0","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_day","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_day0","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_ordinal","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_ordinal0","","",30,[[],[["option",4],["datetime",3]]]],[11,"year","","Returns the year number in the calendar date.",32,[[]]],[11,"month","","Returns the month number starting from 1.",32,[[]]],[11,"month0","","Returns the month number starting from 0.",32,[[]]],[11,"day","","Returns the day of month starting from 1.",32,[[]]],[11,"day0","","Returns the day of month starting from 0.",32,[[]]],[11,"ordinal","","Returns the day of year starting from 1.",32,[[]]],[11,"ordinal0","","Returns the day of year starting from 0.",32,[[]]],[11,"weekday","","Returns the day of week.",32,[[],["weekday",4]]],[11,"iso_week","","",32,[[],["isoweek",3]]],[11,"with_year","","Makes a new `NaiveDateTime` with the year number changed.",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_month","","Makes a new `NaiveDateTime` with the month number…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_month0","","Makes a new `NaiveDateTime` with the month number…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_day","","Makes a new `NaiveDateTime` with the day of month…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_day0","","Makes a new `NaiveDateTime` with the day of month…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_ordinal","","Makes a new `NaiveDateTime` with the day of year (starting…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_ordinal0","","Makes a new `NaiveDateTime` with the day of year (starting…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"year","","Returns the year number in the calendar date.",31,[[]]],[11,"month","","Returns the month number starting from 1.",31,[[]]],[11,"month0","","Returns the month number starting from 0.",31,[[]]],[11,"day","","Returns the day of month starting from 1.",31,[[]]],[11,"day0","","Returns the day of month starting from 0.",31,[[]]],[11,"ordinal","","Returns the day of year starting from 1.",31,[[]]],[11,"ordinal0","","Returns the day of year starting from 0.",31,[[]]],[11,"weekday","","Returns the day of week.",31,[[],["weekday",4]]],[11,"iso_week","","",31,[[],["isoweek",3]]],[11,"with_year","","Makes a new `NaiveDate` with the year number changed.",31,[[],[["option",4],["naivedate",3]]]],[11,"with_month","","Makes a new `NaiveDate` with the month number (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"with_month0","","Makes a new `NaiveDate` with the month number (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"with_day","","Makes a new `NaiveDate` with the day of month (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"with_day0","","Makes a new `NaiveDate` with the day of month (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"with_ordinal","","Makes a new `NaiveDate` with the day of year (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"with_ordinal0","","Makes a new `NaiveDate` with the day of year (starting…",31,[[],[["option",4],["naivedate",3]]]],[11,"hash","","",30,[[]]],[11,"hash","","",32,[[]]],[11,"hash","","",33,[[]]],[11,"hash","","",31,[[]]],[11,"hash","","",28,[[]]],[11,"eq","","",31,[[["naivedate",3]]]],[11,"ne","","",31,[[["naivedate",3]]]],[11,"eq","","",33,[[["naivetime",3]]]],[11,"ne","","",33,[[["naivetime",3]]]],[11,"eq","","",32,[[["naivedatetime",3]]]],[11,"ne","","",32,[[["naivedatetime",3]]]],[11,"eq","","",28,[[["fixedoffset",3]]]],[11,"ne","","",28,[[["fixedoffset",3]]]],[11,"eq","","",30,[[["datetime",3]]]],[11,"eq","","",29,[[["utc",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"cmp","","",32,[[["naivedatetime",3]],["ordering",4]]],[11,"cmp","","",30,[[["datetime",3]],["ordering",4]]],[11,"cmp","","",31,[[["naivedate",3]],["ordering",4]]],[11,"cmp","","",33,[[["naivetime",3]],["ordering",4]]],[11,"fmt","","",33,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",28,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",31,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",32,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",30,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",29,[[["formatter",3]],[["result",4],["error",3]]]],[11,"from_offset","","",28,[[["fixedoffset",3]],["fixedoffset",3]]],[11,"offset_from_local_date","","",28,[[["naivedate",3]],[["fixedoffset",3],["localresult",4]]]],[11,"offset_from_local_datetime","","",28,[[["naivedatetime",3]],[["fixedoffset",3],["localresult",4]]]],[11,"offset_from_utc_date","","",28,[[["naivedate",3]],["fixedoffset",3]]],[11,"offset_from_utc_datetime","","",28,[[["naivedatetime",3]],["fixedoffset",3]]],[11,"from_offset","","",29,[[["utc",3]],["utc",3]]],[11,"offset_from_local_date","","",29,[[["naivedate",3]],[["utc",3],["localresult",4]]]],[11,"offset_from_local_datetime","","",29,[[["naivedatetime",3]],[["utc",3],["localresult",4]]]],[11,"offset_from_utc_date","","",29,[[["naivedate",3]],["utc",3]]],[11,"offset_from_utc_datetime","","",29,[[["naivedatetime",3]],["utc",3]]],[11,"clone","","",33,[[],["naivetime",3]]],[11,"clone","","",31,[[],["naivedate",3]]],[11,"clone","","",32,[[],["naivedatetime",3]]],[11,"clone","","",29,[[],["utc",3]]],[11,"clone","","",30,[[],["datetime",3]]],[11,"clone","","",28,[[],["fixedoffset",3]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",30,[[["datetime",3],["fixedoffset",3]],[["utc",3],["datetime",3]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",30,[[["local",3],["datetime",3]],[["datetime",3],["fixedoffset",3]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",30,[[["utc",3],["datetime",3]],[["local",3],["datetime",3]]]],[11,"from","","",30,[[["systemtime",3]],[["local",3],["datetime",3]]]],[11,"from","","Convert this `DateTime<FixedOffset>` instance into a…",30,[[["datetime",3],["fixedoffset",3]],[["local",3],["datetime",3]]]],[11,"from","","Convert this `DateTime<Local>` instance into a…",30,[[["local",3],["datetime",3]],[["utc",3],["datetime",3]]]],[11,"from","","",30,[[["systemtime",3]],[["utc",3],["datetime",3]]]],[11,"from","","Convert this `DateTime<Utc>` instance into a…",30,[[["utc",3],["datetime",3]],[["datetime",3],["fixedoffset",3]]]],[11,"sub_assign","","",32,[[["duration",3]]]],[11,"sub_assign","","",33,[[["duration",3]]]],[11,"sub_assign","","",31,[[["duration",3]]]],[11,"add","","",32,[[["duration",3]],["naivedatetime",3]]],[11,"add","","",33,[[["duration",3]],["naivetime",3]]],[11,"add","","",30,[[["duration",3]],["datetime",3]]],[11,"add","","",31,[[["duration",3]],["naivedate",3]]],[11,"add","","",32,[[["fixedoffset",3]],["naivedatetime",3]]],[11,"add","","",33,[[["fixedoffset",3]],["naivetime",3]]],[11,"add","","",30,[[["fixedoffset",3]],["datetime",3]]],[11,"sub","","",31,[[["naivedate",3]],["duration",3]]],[11,"sub","","",32,[[["duration",3]],["naivedatetime",3]]],[11,"sub","","",32,[[["fixedoffset",3]],["naivedatetime",3]]],[11,"sub","","",30,[[["fixedoffset",3]],["datetime",3]]],[11,"sub","","",32,[[["naivedatetime",3]],["duration",3]]],[11,"sub","","",30,[[["duration",3]],["datetime",3]]],[11,"sub","","",33,[[["fixedoffset",3]],["naivetime",3]]],[11,"sub","","",33,[[["naivetime",3]],["duration",3]]],[11,"sub","","",31,[[["duration",3]],["naivedate",3]]],[11,"sub","","",30,[[["datetime",3]],["duration",3]]],[11,"sub","","",33,[[["duration",3]],["naivetime",3]]],[11,"hour","","Returns the hour number from 0 to 23.",33,[[]]],[11,"minute","","Returns the minute number from 0 to 59.",33,[[]]],[11,"second","","Returns the second number from 0 to 59.",33,[[]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",33,[[]]],[11,"with_hour","","Makes a new `NaiveTime` with the hour number changed.",33,[[],[["option",4],["naivetime",3]]]],[11,"with_minute","","Makes a new `NaiveTime` with the minute number changed.",33,[[],[["option",4],["naivetime",3]]]],[11,"with_second","","Makes a new `NaiveTime` with the second number changed.",33,[[],[["option",4],["naivetime",3]]]],[11,"with_nanosecond","","Makes a new `NaiveTime` with nanoseconds since the whole…",33,[[],[["option",4],["naivetime",3]]]],[11,"num_seconds_from_midnight","","Returns the number of non-leap seconds past the last…",33,[[]]],[11,"hour","","",30,[[]]],[11,"minute","","",30,[[]]],[11,"second","","",30,[[]]],[11,"nanosecond","","",30,[[]]],[11,"with_hour","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_minute","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_second","","",30,[[],[["option",4],["datetime",3]]]],[11,"with_nanosecond","","",30,[[],[["option",4],["datetime",3]]]],[11,"hour","","Returns the hour number from 0 to 23.",32,[[]]],[11,"minute","","Returns the minute number from 0 to 59.",32,[[]]],[11,"second","","Returns the second number from 0 to 59.",32,[[]]],[11,"nanosecond","","Returns the number of nanoseconds since the whole non-leap…",32,[[]]],[11,"with_hour","","Makes a new `NaiveDateTime` with the hour number changed.",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_minute","","Makes a new `NaiveDateTime` with the minute number changed.",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_second","","Makes a new `NaiveDateTime` with the second number changed.",32,[[],[["naivedatetime",3],["option",4]]]],[11,"with_nanosecond","","Makes a new `NaiveDateTime` with nanoseconds since the…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"add_assign","","",33,[[["duration",3]]]],[11,"add_assign","","",31,[[["duration",3]]]],[11,"add_assign","","",32,[[["duration",3]]]],[11,"from_str","","",31,[[],[["result",4],["naivedate",3],["parseerror",3]]]],[11,"from_str","","",33,[[],[["naivetime",3],["parseerror",3],["result",4]]]],[11,"from_str","","",30,[[],[["datetime",3],["result",4],["parseerror",3]]]],[11,"from_str","","",30,[[],[["result",4],["parseerror",3],["datetime",3]]]],[11,"from_str","","",30,[[],[["parseerror",3],["datetime",3],["result",4]]]],[11,"from_str","","",32,[[],[["naivedatetime",3],["parseerror",3],["result",4]]]],[11,"from_sql","tiberius","",19,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","tiberius::numeric","",21,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","","",20,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","tiberius::time::chrono","",32,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","","",33,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","","",31,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","","",30,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql","","",30,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","tiberius","",19,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","tiberius::numeric","",21,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","tiberius::xml","",35,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","tiberius::numeric","",20,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","tiberius::time::chrono","",32,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","","",33,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","","",31,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","","",30,[[["columndata",4]],[["result",6],["option",4]]]],[11,"from_sql_owned","","",30,[[["columndata",4]],[["result",6],["option",4]]]],[11,"to_sql","tiberius::numeric","",21,[[],["columndata",4]]],[11,"to_sql","tiberius::xml","",35,[[],["columndata",4]]],[11,"to_sql","tiberius","",19,[[],["columndata",4]]],[11,"to_sql","tiberius::numeric","",20,[[],["columndata",4]]],[11,"to_sql","tiberius::time::chrono","",31,[[],["columndata",4]]],[11,"to_sql","","",33,[[],["columndata",4]]],[11,"to_sql","","",32,[[],["columndata",4]]],[11,"to_sql","","",30,[[],["columndata",4]]],[11,"to_sql","","",30,[[],["columndata",4]]],[11,"into_sql","tiberius::xml","",35,[[],["columndata",4]]],[11,"as_ref","","",35,[[]]],[11,"from","tiberius::error","",7,[[["error",3]]]],[11,"from","","",7,[[["error",3]]]],[11,"from","","",7,[[["infallible",4]]]],[11,"from","","",7,[[["error",3]],["error",4]]],[11,"from","","",7,[[["parseinterror",3]],["error",4]]],[11,"from","","",7,[[["utf8error",3]],["error",4]]],[11,"from","","",7,[[["fromutf8error",3]],["error",4]]],[11,"from","","",7,[[["fromutf16error",3]],["error",4]]],[11,"into_iter","tiberius","",10,[[]]],[11,"into_iter","","",12,[[]]],[11,"clone","","",0,[[],["authmethod",4]]],[11,"clone","","",4,[[],["config",3]]],[11,"clone","tiberius::error","",7,[[],["error",4]]],[11,"clone","tiberius","",1,[[],["columntype",4]]],[11,"clone","","",2,[[],["columndata",4]]],[11,"clone","tiberius::error","",13,[[],["tokenerror",3]]],[11,"clone","tiberius::numeric","",21,[[],["numeric",3]]],[11,"clone","tiberius::time","",22,[[],["datetime",3]]],[11,"clone","","",23,[[],["smalldatetime",3]]],[11,"clone","","",24,[[],["date",3]]],[11,"clone","","",25,[[],["time",3]]],[11,"clone","","",26,[[],["datetime2",3]]],[11,"clone","","",27,[[],["datetimeoffset",3]]],[11,"clone","tiberius::xml","",34,[[],["xmlschema",3]]],[11,"clone","","",35,[[],["xmldata",3]]],[11,"clone","tiberius","",3,[[],["encryptionlevel",4]]],[11,"default","","",4,[[]]],[11,"eq","","",0,[[["authmethod",4]]]],[11,"ne","","",0,[[["authmethod",4]]]],[11,"eq","tiberius::numeric","",21,[[]]],[11,"eq","tiberius::time","",22,[[["datetime",3]]]],[11,"ne","","",22,[[["datetime",3]]]],[11,"eq","","",23,[[["smalldatetime",3]]]],[11,"ne","","",23,[[["smalldatetime",3]]]],[11,"eq","","",24,[[["date",3]]]],[11,"ne","","",24,[[["date",3]]]],[11,"eq","","",25,[[["time",3]]]],[11,"eq","","",26,[[["datetime2",3]]]],[11,"ne","","",26,[[["datetime2",3]]]],[11,"eq","","",27,[[["datetimeoffset",3]]]],[11,"ne","","",27,[[["datetimeoffset",3]]]],[11,"eq","tiberius::xml","",34,[[["xmlschema",3]]]],[11,"ne","","",34,[[["xmlschema",3]]]],[11,"eq","","",35,[[["xmldata",3]]]],[11,"ne","","",35,[[["xmldata",3]]]],[11,"eq","tiberius","",3,[[["encryptionlevel",4]]]],[11,"to_string","tiberius::xml","",35,[[],["string",3]]],[11,"fmt","tiberius","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::error","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::numeric","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","tiberius::time","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::xml","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius","",3,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::error","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tiberius::numeric","",21,[[["formatter",3]],[["error",3],["result",4]]]],[11,"try_from","tiberius","",3,[[],[["result",4],["encryptionlevel",4]]]],[11,"try_from","","",3,[[],[["result",4],["encryptionlevel",4]]]],[11,"poll_next","","",9,[[["context",3],["pin",3]],[["poll",4],["option",4]]]],[11,"nil","","The \'nil UUID\'.",19,[[],["uuid",3]]],[11,"from_fields","","Creates a UUID from four field values in big-endian order.",19,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_fields_le","","Creates a UUID from four field values in little-endian…",19,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_u128","","Creates a UUID from a 128bit value in big-endian order.",19,[[],["uuid",3]]],[11,"from_u128_le","","Creates a UUID from a 128bit value in little-endian order.",19,[[],["uuid",3]]],[11,"from_slice","","Creates a UUID using the supplied big-endian bytes.",19,[[],[["result",4],["uuid",3],["error",3]]]],[11,"from_bytes","","Creates a UUID using the supplied big-endian bytes.",19,[[],["uuid",3]]],[11,"parse_str","","Parses a `Uuid` from a string of hexadecimal digits with…",19,[[],[["result",4],["uuid",3],["error",3]]]],[11,"to_hyphenated","","Get a [`Hyphenated`] formatter.",19,[[],["hyphenated",3]]],[11,"to_hyphenated_ref","","Get a borrowed [`HyphenatedRef`] formatter.",19,[[],["hyphenatedref",3]]],[11,"to_simple","","Get a [`Simple`] formatter.",19,[[],["simple",3]]],[11,"to_simple_ref","","Get a borrowed [`SimpleRef`] formatter.",19,[[],["simpleref",3]]],[11,"to_urn","","Get a [`Urn`] formatter.",19,[[],["urn",3]]],[11,"to_urn_ref","","Get a borrowed [`UrnRef`] formatter.",19,[[],["urnref",3]]],[11,"new_v1","","Create a new UUID (version 1) using a time value +…",19,[[["timestamp",3]],[["result",4],["uuid",3],["error",3]]]],[11,"to_timestamp","","Returns an optional [`Timestamp`] storing the timestamp…",19,[[],[["timestamp",3],["option",4]]]],[11,"new_v3","","Creates a UUID using a name from a namespace, based on the…",19,[[["uuid",3]],["uuid",3]]],[11,"new_v4","","Creates a random UUID.",19,[[],["uuid",3]]],[18,"NAMESPACE_DNS","","UUID namespace for Domain Name System (DNS).",19,null],[18,"NAMESPACE_OID","","UUID namespace for ISO Object Identifiers (OIDs).",19,null],[18,"NAMESPACE_URL","","UUID namespace for Uniform Resource Locators (URLs).",19,null],[18,"NAMESPACE_X500","","UUID namespace for X.500 Distinguished Names (DNs).",19,null],[11,"get_variant","","Returns the variant of the UUID structure.",19,[[],[["option",4],["variant",4]]]],[11,"get_version_num","","Returns the version number of the UUID.",19,[[]]],[11,"get_version","","Returns the version of the UUID.",19,[[],[["option",4],["version",4]]]],[11,"as_fields","","Returns the four field values of the UUID in big-endian…",19,[[]]],[11,"to_fields_le","","Returns the four field values of the UUID in little-endian…",19,[[]]],[11,"as_u128","","Returns a 128bit value containing the UUID data.",19,[[]]],[11,"to_u128_le","","Returns a 128bit little-endian value containing the UUID…",19,[[]]],[11,"as_bytes","","Returns an array of 16 octets containing the UUID data.",19,[[]]],[11,"is_nil","","Tests if the UUID is nil.",19,[[]]],[11,"encode_buffer","","A buffer that can be used for `encode_...` calls, that is…",19,[[]]],[11,"new","tiberius::numeric","Returns a `Decimal` with a 64 bit `m` representation and…",20,[[],["decimal",3]]],[11,"from_i128_with_scale","","Creates a `Decimal` using a 128 bit signed `m`…",20,[[],["decimal",3]]],[11,"from_parts","","Returns a `Decimal` using the instances constituent parts.",20,[[],["decimal",3]]],[11,"from_scientific","","Returns a `Result` which if successful contains the…",20,[[],[["decimal",3],["result",4],["error",3]]]],[11,"scale","","Returns the scale of the decimal number, otherwise known…",20,[[]]],[11,"set_sign","","An optimized method for changing the sign of a decimal…",20,[[]]],[11,"set_sign_positive","","An optimized method for changing the sign of a decimal…",20,[[]]],[11,"set_sign_negative","","An optimized method for changing the sign of a decimal…",20,[[]]],[11,"set_scale","","An optimized method for changing the scale of a decimal…",20,[[],[["result",4],["error",3]]]],[11,"rescale","","Modifies the `Decimal` to the given scale, attempting to…",20,[[]]],[11,"serialize","","Returns a serialized version of the decimal number. The…",20,[[]]],[11,"deserialize","","Deserializes the given bytes into a decimal number. The…",20,[[],["decimal",3]]],[11,"is_negative","","Returns `true` if the decimal is negative.",20,[[]]],[11,"is_positive","","Returns `true` if the decimal is positive.",20,[[]]],[11,"is_sign_negative","","Returns `true` if the sign bit of the decimal is negative.",20,[[]]],[11,"is_sign_positive","","Returns `true` if the sign bit of the decimal is positive.",20,[[]]],[11,"min_value","","Returns the minimum possible number that `Decimal` can…",20,[[],["decimal",3]]],[11,"max_value","","Returns the maximum possible number that `Decimal` can…",20,[[],["decimal",3]]],[11,"trunc","","Returns a new `Decimal` integral with no fractional…",20,[[],["decimal",3]]],[11,"fract","","Returns a new `Decimal` representing the fractional…",20,[[],["decimal",3]]],[11,"abs","","Computes the absolute value of `self`.",20,[[],["decimal",3]]],[11,"floor","","Returns the largest integer less than or equal to a number.",20,[[],["decimal",3]]],[11,"ceil","","Returns the smallest integer greater than or equal to a…",20,[[],["decimal",3]]],[11,"max","","Returns the maximum of the two numbers.",20,[[["decimal",3]],["decimal",3]]],[11,"min","","Returns the minimum of the two numbers.",20,[[["decimal",3]],["decimal",3]]],[11,"normalize","","Strips any trailing zero\'s from a `Decimal` and converts…",20,[[],["decimal",3]]],[11,"round","","Returns a new `Decimal` number with no fractional portion…",20,[[],["decimal",3]]],[11,"round_dp_with_strategy","","Returns a new `Decimal` number with the specified number…",20,[[["roundingstrategy",4]],["decimal",3]]],[11,"round_dp","","Returns a new `Decimal` number with the specified number…",20,[[],["decimal",3]]],[11,"unpack","","Convert `Decimal` to an internal representation of the…",20,[[],["unpackeddecimal",3]]],[11,"checked_add","","Checked addition. Computes `self + other`, returning…",20,[[["decimal",3]],[["option",4],["decimal",3]]]],[11,"checked_sub","","Checked subtraction. Computes `self - other`, returning…",20,[[["decimal",3]],[["option",4],["decimal",3]]]],[11,"checked_mul","","Checked multiplication. Computes `self * other`, returning…",20,[[["decimal",3]],[["option",4],["decimal",3]]]],[11,"checked_div","","Checked division. Computes `self / other`, returning…",20,[[["decimal",3]],[["option",4],["decimal",3]]]],[11,"checked_rem","","Checked remainder. Computes `self % other`, returning…",20,[[["decimal",3]],[["option",4],["decimal",3]]]],[11,"new_with_scale","","Creates a new Numeric value.",21,[[]]],[11,"dec_part","","Extract the decimal part.",21,[[]]],[11,"int_part","","Extract the integer part.",21,[[]]],[11,"scale","","The scale (where is the decimal point) of the value.",21,[[]]],[11,"value","","The internal integer value",21,[[]]],[11,"precision","","The precision of the `Number` as a number of digits.",21,[[]]],[11,"east","tiberius::time::chrono","Makes a new `FixedOffset` for the Eastern Hemisphere with…",28,[[],["fixedoffset",3]]],[11,"east_opt","","Makes a new `FixedOffset` for the Eastern Hemisphere with…",28,[[],[["option",4],["fixedoffset",3]]]],[11,"west","","Makes a new `FixedOffset` for the Western Hemisphere with…",28,[[],["fixedoffset",3]]],[11,"west_opt","","Makes a new `FixedOffset` for the Western Hemisphere with…",28,[[],[["option",4],["fixedoffset",3]]]],[11,"local_minus_utc","","Returns the number of seconds to add to convert from UTC…",28,[[]]],[11,"utc_minus_local","","Returns the number of seconds to add to convert from the…",28,[[]]],[11,"today","","Returns a `Date` which corresponds to the current date.",29,[[],[["utc",3],["date",3]]]],[11,"now","","Returns a `DateTime` which corresponds to the current date.",29,[[],[["utc",3],["datetime",3]]]],[11,"from_utc","","Makes a new `DateTime` with given UTC datetime and offset.…",30,[[["naivedatetime",3]],["datetime",3]]],[11,"date","","Retrieves a date component.",30,[[],["date",3]]],[11,"time","","Retrieves a time component. Unlike `date`, this is not…",30,[[],["naivetime",3]]],[11,"timestamp","","Returns the number of non-leap seconds since January 1,…",30,[[]]],[11,"timestamp_millis","","Returns the number of non-leap-milliseconds since January…",30,[[]]],[11,"timestamp_nanos","","Returns the number of non-leap-nanoseconds since January…",30,[[]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last second…",30,[[]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last second…",30,[[]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last second…",30,[[]]],[11,"offset","","Retrieves an associated offset from UTC.",30,[[]]],[11,"timezone","","Retrieves an associated time zone.",30,[[]]],[11,"with_timezone","","Changes the associated time zone. This does not change the…",30,[[],["datetime",3]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",30,[[["duration",3]],[["option",4],["datetime",3]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",30,[[["duration",3]],[["option",4],["datetime",3]]]],[11,"signed_duration_since","","Subtracts another `DateTime` from the current date and…",30,[[["datetime",3]],["duration",3]]],[11,"naive_utc","","Returns a view to the naive UTC datetime.",30,[[],["naivedatetime",3]]],[11,"naive_local","","Returns a view to the naive local datetime.",30,[[],["naivedatetime",3]]],[11,"parse_from_rfc2822","","Parses an RFC 2822 date and time string such as `Tue, 1…",30,[[],[["datetime",3],["result",4],["parseerror",3]]]],[11,"parse_from_rfc3339","","Parses an RFC 3339 and ISO 8601 date and time string such…",30,[[],[["datetime",3],["result",4],["parseerror",3]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",30,[[],[["datetime",3],["result",4],["parseerror",3]]]],[11,"to_rfc2822","","Returns an RFC 2822 date and time string such as `Tue, 1…",30,[[],["string",3]]],[11,"to_rfc3339","","Returns an RFC 3339 and ISO 8601 date and time string such…",30,[[],["string",3]]],[11,"to_rfc3339_opts","","Return an RFC 3339 and ISO 8601 date and time string with…",30,[[["secondsformat",4]],["string",3]]],[11,"format_with_items","","Formats the combined date and time with the specified…",30,[[],["delayedformat",3]]],[11,"format","","Formats the combined date and time with the specified…",30,[[],[["delayedformat",3],["strftimeitems",3]]]],[11,"from_ymd","","Makes a new `NaiveDate` from the calendar date (year,…",31,[[],["naivedate",3]]],[11,"from_ymd_opt","","Makes a new `NaiveDate` from the calendar date (year,…",31,[[],[["option",4],["naivedate",3]]]],[11,"from_yo","","Makes a new `NaiveDate` from the ordinal date (year and…",31,[[],["naivedate",3]]],[11,"from_yo_opt","","Makes a new `NaiveDate` from the ordinal date (year and…",31,[[],[["option",4],["naivedate",3]]]],[11,"from_isoywd","","Makes a new `NaiveDate` from the ISO week date (year, week…",31,[[["weekday",4]],["naivedate",3]]],[11,"from_isoywd_opt","","Makes a new `NaiveDate` from the ISO week date (year, week…",31,[[["weekday",4]],[["option",4],["naivedate",3]]]],[11,"from_num_days_from_ce","","Makes a new `NaiveDate` from a day\'s number in the…",31,[[],["naivedate",3]]],[11,"from_num_days_from_ce_opt","","Makes a new `NaiveDate` from a day\'s number in the…",31,[[],[["option",4],["naivedate",3]]]],[11,"from_weekday_of_month","","Makes a new `NaiveDate` by counting the number of…",31,[[["weekday",4]],["naivedate",3]]],[11,"from_weekday_of_month_opt","","Makes a new `NaiveDate` by counting the number of…",31,[[["weekday",4]],[["option",4],["naivedate",3]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",31,[[],[["result",4],["naivedate",3],["parseerror",3]]]],[11,"and_time","","Makes a new `NaiveDateTime` from the current date and…",31,[[["naivetime",3]],["naivedatetime",3]]],[11,"and_hms","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],["naivedatetime",3]]],[11,"and_hms_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],[["naivedatetime",3],["option",4]]]],[11,"and_hms_milli","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],["naivedatetime",3]]],[11,"and_hms_milli_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],[["naivedatetime",3],["option",4]]]],[11,"and_hms_micro","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],["naivedatetime",3]]],[11,"and_hms_micro_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],[["naivedatetime",3],["option",4]]]],[11,"and_hms_nano","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],["naivedatetime",3]]],[11,"and_hms_nano_opt","","Makes a new `NaiveDateTime` from the current date, hour,…",31,[[],[["naivedatetime",3],["option",4]]]],[11,"succ","","Makes a new `NaiveDate` for the next calendar date.",31,[[],["naivedate",3]]],[11,"succ_opt","","Makes a new `NaiveDate` for the next calendar date.",31,[[],[["option",4],["naivedate",3]]]],[11,"pred","","Makes a new `NaiveDate` for the previous calendar date.",31,[[],["naivedate",3]]],[11,"pred_opt","","Makes a new `NaiveDate` for the previous calendar date.",31,[[],[["option",4],["naivedate",3]]]],[11,"checked_add_signed","","Adds the `days` part of given `Duration` to the current…",31,[[["duration",3]],[["option",4],["naivedate",3]]]],[11,"checked_sub_signed","","Subtracts the `days` part of given `Duration` from the…",31,[[["duration",3]],[["option",4],["naivedate",3]]]],[11,"signed_duration_since","","Subtracts another `NaiveDate` from the current date.…",31,[[["naivedate",3]],["duration",3]]],[11,"format_with_items","","Formats the date with the specified formatting items.…",31,[[],["delayedformat",3]]],[11,"format","","Formats the date with the specified format string. See the…",31,[[],[["delayedformat",3],["strftimeitems",3]]]],[11,"new","","Makes a new `NaiveDateTime` from date and time components.…",32,[[["naivedate",3],["naivetime",3]],["naivedatetime",3]]],[11,"from_timestamp","","Makes a new `NaiveDateTime` corresponding to a UTC date…",32,[[],["naivedatetime",3]]],[11,"from_timestamp_opt","","Makes a new `NaiveDateTime` corresponding to a UTC date…",32,[[],[["naivedatetime",3],["option",4]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",32,[[],[["naivedatetime",3],["parseerror",3],["result",4]]]],[11,"date","","Retrieves a date component.",32,[[],["naivedate",3]]],[11,"time","","Retrieves a time component.",32,[[],["naivetime",3]]],[11,"timestamp","","Returns the number of non-leap seconds since the midnight…",32,[[]]],[11,"timestamp_millis","","Returns the number of non-leap milliseconds since midnight…",32,[[]]],[11,"timestamp_nanos","","Returns the number of non-leap nanoseconds since midnight…",32,[[]]],[11,"timestamp_subsec_millis","","Returns the number of milliseconds since the last whole…",32,[[]]],[11,"timestamp_subsec_micros","","Returns the number of microseconds since the last whole…",32,[[]]],[11,"timestamp_subsec_nanos","","Returns the number of nanoseconds since the last whole…",32,[[]]],[11,"checked_add_signed","","Adds given `Duration` to the current date and time.",32,[[["duration",3]],[["naivedatetime",3],["option",4]]]],[11,"checked_sub_signed","","Subtracts given `Duration` from the current date and time.",32,[[["duration",3]],[["naivedatetime",3],["option",4]]]],[11,"signed_duration_since","","Subtracts another `NaiveDateTime` from the current date…",32,[[["naivedatetime",3]],["duration",3]]],[11,"format_with_items","","Formats the combined date and time with the specified…",32,[[],["delayedformat",3]]],[11,"format","","Formats the combined date and time with the specified…",32,[[],[["delayedformat",3],["strftimeitems",3]]]],[11,"from_hms","","Makes a new `NaiveTime` from hour, minute and second.",33,[[],["naivetime",3]]],[11,"from_hms_opt","","Makes a new `NaiveTime` from hour, minute and second.",33,[[],[["option",4],["naivetime",3]]]],[11,"from_hms_milli","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],["naivetime",3]]],[11,"from_hms_milli_opt","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],[["option",4],["naivetime",3]]]],[11,"from_hms_micro","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],["naivetime",3]]],[11,"from_hms_micro_opt","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],[["option",4],["naivetime",3]]]],[11,"from_hms_nano","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],["naivetime",3]]],[11,"from_hms_nano_opt","","Makes a new `NaiveTime` from hour, minute, second and…",33,[[],[["option",4],["naivetime",3]]]],[11,"from_num_seconds_from_midnight","","Makes a new `NaiveTime` from the number of seconds since…",33,[[],["naivetime",3]]],[11,"from_num_seconds_from_midnight_opt","","Makes a new `NaiveTime` from the number of seconds since…",33,[[],[["option",4],["naivetime",3]]]],[11,"parse_from_str","","Parses a string with the specified format string and…",33,[[],[["naivetime",3],["parseerror",3],["result",4]]]],[11,"overflowing_add_signed","","Adds given `Duration` to the current time, and also…",33,[[["duration",3]]]],[11,"overflowing_sub_signed","","Subtracts given `Duration` from the current time, and also…",33,[[["duration",3]]]],[11,"signed_duration_since","","Subtracts another `NaiveTime` from the current time.…",33,[[["naivetime",3]],["duration",3]]],[11,"format_with_items","","Formats the time with the specified formatting items.…",33,[[],["delayedformat",3]]],[11,"format","","Formats the time with the specified format string. See the…",33,[[],[["delayedformat",3],["strftimeitems",3]]]],[11,"new","tiberius::time","Construct a new `DateTime` instance.",22,[[]]],[11,"days","","Days since 1st of January, 1900 (including the negative…",22,[[]]],[11,"seconds_fragments","","1/300 of a second, so a value of 300 equals 1 second…",22,[[]]],[11,"new","","Construct a new `SmallDateTime` instance.",23,[[]]],[11,"days","","Days since 1st of January, 1900.",23,[[]]],[11,"seconds_fragments","","1/300 of a second, so a value of 300 equals 1 second…",23,[[]]],[11,"new","","Construct a new `Date`",24,[[],["date",3]]],[11,"days","","The number of days from 1st of January, year 1.",24,[[]]],[11,"new","","Construct a new `Time`",25,[[]]],[11,"increments","","Number of 10^-n second increments since midnight, where…",25,[[]]],[11,"scale","","The accuracy of the increments.",25,[[]]],[11,"new","","Construct a new `DateTime2` from the date and time…",26,[[["time",3],["date",3]]]],[11,"date","","The date component.",26,[[],["date",3]]],[11,"time","","The time component.",26,[[],["time",3]]],[11,"new","","Construct a new `DateTimeOffset` from a `datetime2`,…",27,[[["datetime2",3]]]],[11,"datetime2","","The date and time part.",27,[[],["datetime2",3]]],[11,"offset","","Number of minutes from UTC.",27,[[]]],[11,"db_name","tiberius::xml","Specifies the name of the database where the schema…",34,[[]]],[11,"owner","","Specifies the name of the relational schema containing the…",34,[[]]],[11,"collection","","Specifies the name of the XML schema collection to which…",34,[[]]],[11,"new","","Create a new XmlData with the given string. Validation of…",35,[[]]],[11,"schema","","Returns information about the schema of the XML file, if…",35,[[],[["option",4],["xmlschema",3]]]],[11,"into_string","","Takes the XML string out from the struct.",35,[[],["string",3]]]],"p":[[4,"AuthMethod"],[4,"ColumnType"],[4,"ColumnData"],[4,"EncryptionLevel"],[3,"Config"],[3,"Client"],[4,"IoErrorKind"],[4,"Error"],[13,"Io"],[3,"QueryResult"],[3,"ExecuteResult"],[3,"Column"],[3,"Row"],[3,"TokenError"],[8,"FromSql"],[8,"FromSqlOwned"],[8,"SqlBrowser"],[8,"IntoSql"],[8,"ToSql"],[3,"Uuid"],[3,"Decimal"],[3,"Numeric"],[3,"DateTime"],[3,"SmallDateTime"],[3,"Date"],[3,"Time"],[3,"DateTime2"],[3,"DateTimeOffset"],[3,"FixedOffset"],[3,"Utc"],[3,"DateTime"],[3,"NaiveDate"],[3,"NaiveDateTime"],[3,"NaiveTime"],[3,"XmlSchema"],[3,"XmlData"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);